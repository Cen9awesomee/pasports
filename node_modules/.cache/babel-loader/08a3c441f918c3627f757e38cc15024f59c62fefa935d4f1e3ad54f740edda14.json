{"ast":null,"code":"import ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'PopulationChart',\n  components: {\n    ApexChart\n  },\n  props: {\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '100%'\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: []\n      })\n    }\n  },\n  data() {\n    return {\n      horizontalTotal: true\n    };\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          type: 'bar',\n          height: 440,\n          stacked: true,\n          toolbar: {\n            show: false\n          }\n        },\n        colors: this.dataSource.colors,\n        plotOptions: {\n          bar: {\n            borderRadius: 0,\n            horizontal: true,\n            barHeight: '70%'\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          formatter: function (val) {\n            return Math.abs(val).toFixed(1);\n          },\n          style: {\n            fontSize: '11px',\n            fontWeight: 400,\n            fontFamily: 'Montserrat-Regular, sans-serif',\n            colors: ['#fff']\n          }\n        },\n        stroke: {\n          width: 0,\n          colors: [\"#fff\"]\n        },\n        grid: {\n          show: false\n        },\n        yaxis: {\n          stepSize: 1,\n          labels: {\n            show: true,\n            formatter: function (val) {\n              return val;\n            },\n            style: {\n              colors: '#ffffff'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        tooltip: {\n          shared: false,\n          intersect: true,\n          style: {\n            fontFamily: 'Montserrat-Regular, sans-serif',\n            fontSize: '10px'\n          },\n          custom: function ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) {\n            const category = w.config.xaxis.categories[dataPointIndex];\n            const value = Math.abs(series[seriesIndex][dataPointIndex]).toFixed(1);\n            const color = w.globals.colors[seriesIndex];\n            return `\n                <div style=\"padding: 5px; background: ${color}; color: #fff; border-radius: 0; font-size: 10px; border: none;\">\n                    <strong>${category}:</strong> ${value}\n                </div>\n            `;\n          }\n        },\n        xaxis: {\n          categories: this.dataSource.categories,\n          labels: {\n            show: false\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: false,\n            color: '#4b3f3f'\n          }\n        },\n        legend: {\n          position: \"bottom\",\n          fontSize: '10px',\n          markers: {\n            width: 10,\n            height: 10,\n            borderRadius: 10,\n            strokeWidth: 0\n          },\n          itemMargin: {\n            horizontal: 5\n          },\n          inverseOrder: true,\n          formatter: function (seriesName, opts) {\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\n          }\n        }\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","width","type","String","default","height","dataSource","Object","required","series","categories","colors","data","horizontalTotal","computed","chartOptions","chart","stacked","toolbar","show","plotOptions","bar","borderRadius","horizontal","barHeight","dataLabels","enabled","formatter","val","Math","abs","toFixed","style","fontSize","fontWeight","fontFamily","stroke","grid","yaxis","stepSize","labels","axisBorder","color","axisTicks","tooltip","shared","intersect","custom","seriesIndex","dataPointIndex","w","category","config","xaxis","value","globals","legend","position","markers","strokeWidth","itemMargin","inverseOrder","seriesName","opts"],"sources":["src/components/charts/PopulationChart.vue"],"sourcesContent":["<template>\r\n  <ApexChart\r\n    type=\"bar\"\r\n    :width=\"width\"\r\n    :height=\"height\"\r\n    :options=\"chartOptions\"\r\n    :series=\"dataSource.series\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport ApexChart from 'vue-apexcharts';\r\n\r\nexport default {\r\n  name: 'PopulationChart',\r\n  components: {\r\n    ApexChart,\r\n  },\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '100%',\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '100%',\r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      horizontalTotal: true,\r\n    };\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      return {\r\n        chart: {\r\n              type: 'bar',\r\n              height: 440,\r\n              stacked: true,\r\n              toolbar: {\r\n                show: false\r\n              }\r\n            },\r\n            colors: this.dataSource.colors,\r\n            plotOptions: {\r\n              bar: {\r\n                borderRadius: 0,\r\n                horizontal: true,\r\n                barHeight: '70%',\r\n              },\r\n            },\r\n            dataLabels: {\r\n              enabled: true,\r\n              formatter: function (val) {\r\n            return Math.abs(val).toFixed(1); \r\n        },\r\n              style: {\r\n      fontSize: '11px',\r\n      fontWeight: 400, \r\n      fontFamily: 'Montserrat-Regular, sans-serif', \r\n      colors: ['#fff'], \r\n    }\r\n            },\r\n            stroke: {\r\n              width: 0,\r\n              colors: [\"#fff\"]\r\n            },\r\n            \r\n            grid: {\r\n        show: false, \r\n    },\r\n            yaxis: {\r\n              stepSize: 1,\r\n              labels: {\r\n            show: true,\r\n            formatter: function (val) {\r\n                return val; \r\n            },\r\n            style: {\r\n                colors: '#ffffff', \r\n            },\r\n        },\r\n              axisBorder: {\r\n            show: true, \r\n            color: '#4b3f3f'\r\n        },\r\n        axisTicks: {\r\n            show: true, \r\n            color: '#4b3f3f'\r\n        },\r\n            },\r\n            tooltip: {\r\n        shared: false, \r\n        intersect: true, \r\n        style: {\r\n            fontFamily: 'Montserrat-Regular, sans-serif', \r\n            fontSize: '10px', \r\n        },\r\n        custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n            const category = w.config.xaxis.categories[dataPointIndex]; \r\n            const value = Math.abs(series[seriesIndex][dataPointIndex]).toFixed(1); \r\n            const color = w.globals.colors[seriesIndex]; \r\n\r\n            return `\r\n                <div style=\"padding: 5px; background: ${color}; color: #fff; border-radius: 0; font-size: 10px; border: none;\">\r\n                    <strong>${category}:</strong> ${value}\r\n                </div>\r\n            `; \r\n        },\r\n    },\r\n            \r\n            xaxis: {\r\n              categories: this.dataSource.categories,\r\n              \r\n              labels: {\r\n                show: false\r\n              },\r\n              axisBorder: {\r\n            show: true, \r\n            color: '#4b3f3f'\r\n        },\r\n        axisTicks: {\r\n            show: false, \r\n            color: '#4b3f3f'\r\n        },\r\n            },\r\n            legend: {\r\n        position: \"bottom\",\r\n        \r\n        fontSize: '10px', \r\n        markers: {\r\n          width: 10,  \r\n          height: 10,\r\n          borderRadius: 10,\r\n          strokeWidth: 0,  \r\n        },\r\n        itemMargin: {\r\n          horizontal: 5, \r\n          \r\n        },\r\n        inverseOrder: true,\r\n        formatter: function(seriesName, opts) {\r\n          return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\r\n        }\r\n      },\r\n          }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AAWA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,UAAA;MACAJ,IAAA,EAAAK,MAAA;MACAC,QAAA;MACAJ,OAAA,EAAAA,CAAA;QACAK,MAAA;QACAC,UAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,KAAA;IACA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA;QACAC,KAAA;UACAd,IAAA;UACAG,MAAA;UACAY,OAAA;UACAC,OAAA;YACAC,IAAA;UACA;QACA;QACAR,MAAA,OAAAL,UAAA,CAAAK,MAAA;QACAS,WAAA;UACAC,GAAA;YACAC,YAAA;YACAC,UAAA;YACAC,SAAA;UACA;QACA;QACAC,UAAA;UACAC,OAAA;UACAC,SAAA,WAAAA,CAAAC,GAAA;YACA,OAAAC,IAAA,CAAAC,GAAA,CAAAF,GAAA,EAAAG,OAAA;UACA;UACAC,KAAA;YACAC,QAAA;YACAC,UAAA;YACAC,UAAA;YACAxB,MAAA;UACA;QACA;QACAyB,MAAA;UACAnC,KAAA;UACAU,MAAA;QACA;QAEA0B,IAAA;UACAlB,IAAA;QACA;QACAmB,KAAA;UACAC,QAAA;UACAC,MAAA;YACArB,IAAA;YACAQ,SAAA,WAAAA,CAAAC,GAAA;cACA,OAAAA,GAAA;YACA;YACAI,KAAA;cACArB,MAAA;YACA;UACA;UACA8B,UAAA;YACAtB,IAAA;YACAuB,KAAA;UACA;UACAC,SAAA;YACAxB,IAAA;YACAuB,KAAA;UACA;QACA;QACAE,OAAA;UACAC,MAAA;UACAC,SAAA;UACAd,KAAA;YACAG,UAAA;YACAF,QAAA;UACA;UACAc,MAAA,WAAAA,CAAA;YAAAtC,MAAA;YAAAuC,WAAA;YAAAC,cAAA;YAAAC;UAAA;YACA,MAAAC,QAAA,GAAAD,CAAA,CAAAE,MAAA,CAAAC,KAAA,CAAA3C,UAAA,CAAAuC,cAAA;YACA,MAAAK,KAAA,GAAAzB,IAAA,CAAAC,GAAA,CAAArB,MAAA,CAAAuC,WAAA,EAAAC,cAAA,GAAAlB,OAAA;YACA,MAAAW,KAAA,GAAAQ,CAAA,CAAAK,OAAA,CAAA5C,MAAA,CAAAqC,WAAA;YAEA;AACA,wDAAAN,KAAA;AACA,8BAAAS,QAAA,cAAAG,KAAA;AACA;AACA;UACA;QACA;QAEAD,KAAA;UACA3C,UAAA,OAAAJ,UAAA,CAAAI,UAAA;UAEA8B,MAAA;YACArB,IAAA;UACA;UACAsB,UAAA;YACAtB,IAAA;YACAuB,KAAA;UACA;UACAC,SAAA;YACAxB,IAAA;YACAuB,KAAA;UACA;QACA;QACAc,MAAA;UACAC,QAAA;UAEAxB,QAAA;UACAyB,OAAA;YACAzD,KAAA;YACAI,MAAA;YACAiB,YAAA;YACAqC,WAAA;UACA;UACAC,UAAA;YACArC,UAAA;UAEA;UACAsC,YAAA;UACAlC,SAAA,WAAAA,CAAAmC,UAAA,EAAAC,IAAA;YACA,8BAAAA,IAAA,CAAAb,CAAA,CAAAK,OAAA,CAAA5C,MAAA,CAAAoD,IAAA,CAAAf,WAAA,MAAAc,UAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}