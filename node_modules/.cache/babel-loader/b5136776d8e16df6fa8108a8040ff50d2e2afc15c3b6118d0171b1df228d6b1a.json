{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'RingCharts',\n  components: {\n    ApexChart\n  },\n  props: {\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '100%'\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: []\n      })\n    }\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          type: 'donut',\n          height: 200\n        },\n        labels: this.dataSource.categories,\n        colors: this.dataSource.colors,\n        legend: {\n          position: 'bottom',\n          fontSize: '10px',\n          markers: {\n            width: 10,\n            height: 10,\n            strokeWidth: 0\n          },\n          itemMargin: {\n            horizontal: 5,\n            vertical: 5\n          },\n          inverseOrder: true,\n          formatter: function (seriesName, opts) {\n            if (opts?.w?.globals?.colors?.[opts.seriesIndex]) {\n              const color = opts.w.globals.colors[opts.seriesIndex];\n              return `<span style=\"color: ${color}\">${seriesName}</span>`;\n            }\n            return seriesName;\n          }\n        },\n        plotOptions: {\n          pie: {\n            donut: {\n              size: '45%',\n              labels: {\n                show: true,\n                name: {\n                  show: false\n                },\n                value: {\n                  show: true,\n                  fontSize: '15px',\n                  color: '#ffffff'\n                },\n                total: {\n                  show: true,\n                  label: '',\n                  formatter: function (w) {\n                    return w.config.series.reduce((a, b) => b - a, 0);\n                  },\n                  style: {\n                    fontSize: '5px',\n                    fontWeight: 600\n                  }\n                }\n              }\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          formatter: function (val, opts) {\n            return opts.w.config.series[opts.seriesIndex];\n          },\n          style: {\n            fontWeight: 100\n          }\n        },\n        tooltip: {\n          theme: 'dark'\n        },\n        fill: {\n          opacity: 1\n        },\n        stroke: {\n          show: false\n        }\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","width","type","String","default","height","dataSource","Object","required","series","categories","colors","computed","chartOptions","chart","labels","legend","position","fontSize","markers","strokeWidth","itemMargin","horizontal","vertical","inverseOrder","formatter","seriesName","opts","w","globals","seriesIndex","color","plotOptions","pie","donut","size","show","value","total","label","config","reduce","a","b","style","fontWeight","dataLabels","enabled","val","tooltip","theme","fill","opacity","stroke"],"sources":["src/components/charts/RingCharts.vue"],"sourcesContent":["<template>\r\n  <ApexChart\r\n    type=\"donut\"\r\n    :width=\"width\"\r\n    :height=\"height\"\r\n    :options=\"chartOptions\"\r\n    :series=\"dataSource.series\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport ApexChart from 'vue-apexcharts';\r\n\r\nexport default {\r\n  name: 'RingCharts',\r\n  components: {\r\n    ApexChart,\r\n  },\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '100%',\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '100%',\r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n      }),\r\n    },\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      return {\r\n        chart: {\r\n          type: 'donut',\r\n          height: 200,\r\n        },\r\n        labels: this.dataSource.categories,\r\n        colors: this.dataSource.colors,\r\n        legend: {\r\n          position: 'bottom',\r\n          fontSize: '10px',\r\n          markers: {\r\n            width: 10,\r\n            height: 10,\r\n            strokeWidth: 0,\r\n          },\r\n          itemMargin: {\r\n            horizontal: 5,\r\n            vertical: 5,\r\n          },\r\n          inverseOrder: true,\r\n          formatter: function (seriesName, opts) {\r\n            if (opts?.w?.globals?.colors?.[opts.seriesIndex]) {\r\n              const color = opts.w.globals.colors[opts.seriesIndex];\r\n              return `<span style=\"color: ${color}\">${seriesName}</span>`;\r\n            }\r\n            return seriesName;\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              size: '45%',\r\n              labels: {\r\n                show: true,\r\n                name: {\r\n                  show: false,\r\n                },\r\n                value: {\r\n                  show: true,\r\n                  fontSize: '15px',\r\n                  color: '#ffffff',\r\n                },\r\n                total: {\r\n                  show: true,\r\n                  label: '',\r\n                  formatter: function (w) {\r\n                    return w.config.series.reduce((a, b) => b - a, 0);\r\n                  },\r\n                  style: {\r\n                    fontSize: '5px',\r\n                    fontWeight: 600,\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val, opts) {\r\n            return opts.w.config.series[opts.seriesIndex];\r\n          },\r\n          style: {\r\n            fontWeight: 100,\r\n          },\r\n        },\r\n        tooltip: {\r\n          theme: 'dark',\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n        stroke: {\r\n          show: false,\r\n        },\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";;AAWA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,UAAA;MACAJ,IAAA,EAAAK,MAAA;MACAC,QAAA;MACAJ,OAAA,EAAAA,CAAA;QACAK,MAAA;QACAC,UAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA;QACAC,KAAA;UACAZ,IAAA;UACAG,MAAA;QACA;QACAU,MAAA,OAAAT,UAAA,CAAAI,UAAA;QACAC,MAAA,OAAAL,UAAA,CAAAK,MAAA;QACAK,MAAA;UACAC,QAAA;UACAC,QAAA;UACAC,OAAA;YACAlB,KAAA;YACAI,MAAA;YACAe,WAAA;UACA;UACAC,UAAA;YACAC,UAAA;YACAC,QAAA;UACA;UACAC,YAAA;UACAC,SAAA,WAAAA,CAAAC,UAAA,EAAAC,IAAA;YACA,IAAAA,IAAA,EAAAC,CAAA,EAAAC,OAAA,EAAAlB,MAAA,GAAAgB,IAAA,CAAAG,WAAA;cACA,MAAAC,KAAA,GAAAJ,IAAA,CAAAC,CAAA,CAAAC,OAAA,CAAAlB,MAAA,CAAAgB,IAAA,CAAAG,WAAA;cACA,8BAAAC,KAAA,KAAAL,UAAA;YACA;YACA,OAAAA,UAAA;UACA;QACA;QACAM,WAAA;UACAC,GAAA;YACAC,KAAA;cACAC,IAAA;cACApB,MAAA;gBACAqB,IAAA;gBACAtC,IAAA;kBACAsC,IAAA;gBACA;gBACAC,KAAA;kBACAD,IAAA;kBACAlB,QAAA;kBACAa,KAAA;gBACA;gBACAO,KAAA;kBACAF,IAAA;kBACAG,KAAA;kBACAd,SAAA,WAAAA,CAAAG,CAAA;oBACA,OAAAA,CAAA,CAAAY,MAAA,CAAA/B,MAAA,CAAAgC,MAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,GAAAD,CAAA;kBACA;kBACAE,KAAA;oBACA1B,QAAA;oBACA2B,UAAA;kBACA;gBACA;cACA;YACA;UACA;QACA;QACAC,UAAA;UACAC,OAAA;UACAtB,SAAA,WAAAA,CAAAuB,GAAA,EAAArB,IAAA;YACA,OAAAA,IAAA,CAAAC,CAAA,CAAAY,MAAA,CAAA/B,MAAA,CAAAkB,IAAA,CAAAG,WAAA;UACA;UACAc,KAAA;YACAC,UAAA;UACA;QACA;QACAI,OAAA;UACAC,KAAA;QACA;QACAC,IAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAjB,IAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}