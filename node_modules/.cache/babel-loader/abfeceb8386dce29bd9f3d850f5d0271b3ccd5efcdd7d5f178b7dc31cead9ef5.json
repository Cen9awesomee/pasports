{"ast":null,"code":"import ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'NationalChart',\n  components: {\n    ApexChart\n  },\n  props: {\n    height: {\n      type: [Number, String],\n      default: 200\n    },\n    width: {\n      type: [Number, String],\n      default: '130%'\n    },\n    columnWidth: {\n      type: String,\n      default: '80%'\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: []\n      })\n    }\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          height: this.height,\n          type: 'bar',\n          toolbar: {\n            show: false\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              position: 'center',\n              total: {\n                enabled: true,\n                offsetX: 3,\n                formatter: function (val) {\n                  return val.toFixed(1);\n                },\n                style: {\n                  fontSize: '11px',\n                  color: '#ffffff',\n                  fontFamily: 'Montserrat-Regular, sans-serif',\n                  fontWeight: 400\n                }\n              }\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          style: {\n            fontFamily: 'Montserrat-Regular, sans-serif',\n            fontSize: '11px',\n            fontWeight: 300,\n            colors: ['#ffffff']\n          }\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          width: 0,\n          colors: ['#fff']\n        },\n        xaxis: {\n          tickAmount: 6,\n          categories: this.dataSource.categories,\n          labels: {\n            style: {\n              colors: '#ffffff',\n              fontSize: '11px'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        yaxis: {\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          labels: {\n            show: true,\n            offsetX: 5,\n            formatter: function (val) {\n              return val;\n            },\n            style: {\n              colors: '#ffffff',\n              fontSize: '10px'\n            }\n          }\n        },\n        tooltip: {\n          shared: false,\n          intersect: true,\n          style: {\n            fontFamily: 'Montserrat-Regular, sans-serif',\n            fontSize: '10px',\n            fontWeight: 400\n          },\n          custom: function ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) {\n            const value = series[seriesIndex][dataPointIndex];\n            const category = w.config.xaxis.categories[dataPointIndex];\n            const color = w.globals.colors[seriesIndex];\n            return `\n                <div style=\"padding: 5px; background: ${color}; color: #fff; border-radius: 0; font-size: 10px; border: none;\">\n                    <strong>${category}:</strong> ${value}\n                </div>\n            `;\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          position: 'bottom',\n          fontSize: '10px',\n          markers: {\n            width: 10,\n            height: 10,\n            borderRadius: 10,\n            strokeWidth: 0\n          },\n          offsetX: 40,\n          formatter: function (seriesName, opts) {\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\n          }\n        },\n        colors: this.dataSource.colors\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","height","type","Number","String","default","width","columnWidth","dataSource","Object","required","series","categories","colors","computed","chartOptions","chart","toolbar","show","plotOptions","bar","horizontal","dataLabels","position","total","enabled","offsetX","formatter","val","toFixed","style","fontSize","color","fontFamily","fontWeight","grid","stroke","xaxis","tickAmount","labels","axisBorder","axisTicks","yaxis","tooltip","shared","intersect","custom","seriesIndex","dataPointIndex","w","value","category","config","globals","fill","opacity","legend","markers","borderRadius","strokeWidth","seriesName","opts"],"sources":["src/components/charts/PopulationChart.vue"],"sourcesContent":["<template>\r\n      <ApexChart\r\n        type=\"bar\"\r\n        :height=\"height\"\r\n        :width=\"width\"\r\n        :options=\"chartOptions\"\r\n        :series=\"dataSource.series\"\r\n      ></ApexChart>\r\n  </template>\r\n  \r\n  <script>\r\n  import ApexChart from 'vue-apexcharts';\r\n  \r\n  export default {\r\n    name: 'NationalChart',\r\n    components: {\r\n      ApexChart,\r\n    },\r\n    props: {\r\n      height: {\r\n      type: [Number, String],\r\n      default: 200,\r\n    },\r\n    width: {\r\n      type: [Number, String],\r\n      default: '130%',\r\n    },\r\n    columnWidth: {\r\n      type: String,\r\n      default: '80%',\r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n      }),\r\n    },\r\n  },\r\n    computed: {\r\n      chartOptions() {\r\n      return {\r\n        chart: {\r\n          height: this.height,\r\n          type: 'bar',\r\n          toolbar: { show: false },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n                dataLabels: {\r\n                  position: 'center',\r\n                  total: {\r\n                    enabled: true,\r\n                    offsetX: 3,\r\n                    formatter: function (val) {\r\n                        return val.toFixed(1); \r\n                    },\r\n                    style: {\r\n                      fontSize: '11px',\r\n                      color: '#ffffff',\r\n                      fontFamily: 'Montserrat-Regular, sans-serif',\r\n                      fontWeight: 400\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n            },\r\n            dataLabels: {\r\n              enabled: true,\r\n                  style: {\r\n            fontFamily: 'Montserrat-Regular, sans-serif',\r\n            fontSize: '11px',\r\n            fontWeight: 300,\r\n            colors: ['#ffffff'],\r\n        },\r\n            },\r\n            grid: {\r\n        show: false,\r\n    },\r\n            stroke: {\r\n              width: 0,\r\n              colors: ['#fff']\r\n            },\r\n            \r\n            xaxis: {\r\n              tickAmount: 6,\r\n              categories: this.dataSource.categories,\r\n              labels: {\r\n            style: {\r\n                colors: '#ffffff',\r\n                fontSize: '11px',\r\n            },\r\n        },\r\n        axisBorder: {\r\n            show: true,\r\n            color: '#4b3f3f'\r\n        },\r\n        axisTicks: {\r\n            show: true,\r\n            color: '#4b3f3f'\r\n        },\r\n            },\r\n            yaxis: {\r\n               \r\n        axisBorder: {\r\n            show: true, \r\n            color: '#4b3f3f'\r\n        },\r\n        axisTicks: {\r\n            show: true, \r\n            color: '#4b3f3f'\r\n        },\r\n        labels: {\r\n            show: true,\r\n            offsetX: 5,\r\n            formatter: function (val) {\r\n                return val; \r\n            },\r\n            style: {\r\n                colors: '#ffffff',\r\n                fontSize: '10px', \r\n            },\r\n        }, \r\n            },\r\n            tooltip: {\r\n        shared: false,\r\n        intersect: true,\r\n        style: {\r\n            fontFamily: 'Montserrat-Regular, sans-serif',\r\n            fontSize: '10px',\r\n            fontWeight: 400,\r\n        },\r\n        custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n            const value = series[seriesIndex][dataPointIndex];\r\n            const category = w.config.xaxis.categories[dataPointIndex];\r\n            const color = w.globals.colors[seriesIndex];\r\n\r\n            return `\r\n                <div style=\"padding: 5px; background: ${color}; color: #fff; border-radius: 0; font-size: 10px; border: none;\">\r\n                    <strong>${category}:</strong> ${value}\r\n                </div>\r\n            `;\r\n        },\r\n    },\r\n            fill: {\r\n              opacity: 1\r\n            },\r\n            legend: {\r\n              position: 'bottom',\r\n              fontSize: '10px', \r\n        markers: {\r\n          width: 10,  \r\n          height: 10,\r\n          borderRadius: 10,\r\n          strokeWidth: 0,  \r\n        },\r\n              offsetX: 40,\r\n              formatter: function(seriesName, opts) {\r\n          return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\r\n        }\r\n            },\r\n            colors: this.dataSource.colors\r\n          }\r\n      }\r\n        }\r\n    \r\n  };\r\n  </script>"],"mappings":"AAWA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,MAAA;MACAC,IAAA,GAAAC,MAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAJ,IAAA,GAAAC,MAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,WAAA;MACAL,IAAA,EAAAE,MAAA;MACAC,OAAA;IACA;IACAG,UAAA;MACAN,IAAA,EAAAO,MAAA;MACAC,QAAA;MACAL,OAAA,EAAAA,CAAA;QACAM,MAAA;QACAC,UAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA;QACAC,KAAA;UACAf,MAAA,OAAAA,MAAA;UACAC,IAAA;UACAe,OAAA;YAAAC,IAAA;UAAA;QACA;QACAC,WAAA;UACAC,GAAA;YACAC,UAAA;YACAC,UAAA;cACAC,QAAA;cACAC,KAAA;gBACAC,OAAA;gBACAC,OAAA;gBACAC,SAAA,WAAAA,CAAAC,GAAA;kBACA,OAAAA,GAAA,CAAAC,OAAA;gBACA;gBACAC,KAAA;kBACAC,QAAA;kBACAC,KAAA;kBACAC,UAAA;kBACAC,UAAA;gBACA;cACA;YACA;UACA;QACA;QACAZ,UAAA;UACAG,OAAA;UACAK,KAAA;YACAG,UAAA;YACAF,QAAA;YACAG,UAAA;YACArB,MAAA;UACA;QACA;QACAsB,IAAA;UACAjB,IAAA;QACA;QACAkB,MAAA;UACA9B,KAAA;UACAO,MAAA;QACA;QAEAwB,KAAA;UACAC,UAAA;UACA1B,UAAA,OAAAJ,UAAA,CAAAI,UAAA;UACA2B,MAAA;YACAT,KAAA;cACAjB,MAAA;cACAkB,QAAA;YACA;UACA;UACAS,UAAA;YACAtB,IAAA;YACAc,KAAA;UACA;UACAS,SAAA;YACAvB,IAAA;YACAc,KAAA;UACA;QACA;QACAU,KAAA;UAEAF,UAAA;YACAtB,IAAA;YACAc,KAAA;UACA;UACAS,SAAA;YACAvB,IAAA;YACAc,KAAA;UACA;UACAO,MAAA;YACArB,IAAA;YACAQ,OAAA;YACAC,SAAA,WAAAA,CAAAC,GAAA;cACA,OAAAA,GAAA;YACA;YACAE,KAAA;cACAjB,MAAA;cACAkB,QAAA;YACA;UACA;QACA;QACAY,OAAA;UACAC,MAAA;UACAC,SAAA;UACAf,KAAA;YACAG,UAAA;YACAF,QAAA;YACAG,UAAA;UACA;UACAY,MAAA,WAAAA,CAAA;YAAAnC,MAAA;YAAAoC,WAAA;YAAAC,cAAA;YAAAC;UAAA;YACA,MAAAC,KAAA,GAAAvC,MAAA,CAAAoC,WAAA,EAAAC,cAAA;YACA,MAAAG,QAAA,GAAAF,CAAA,CAAAG,MAAA,CAAAf,KAAA,CAAAzB,UAAA,CAAAoC,cAAA;YACA,MAAAhB,KAAA,GAAAiB,CAAA,CAAAI,OAAA,CAAAxC,MAAA,CAAAkC,WAAA;YAEA;AACA,wDAAAf,KAAA;AACA,8BAAAmB,QAAA,cAAAD,KAAA;AACA;AACA;UACA;QACA;QACAI,IAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAjC,QAAA;UACAQ,QAAA;UACA0B,OAAA;YACAnD,KAAA;YACAL,MAAA;YACAyD,YAAA;YACAC,WAAA;UACA;UACAjC,OAAA;UACAC,SAAA,WAAAA,CAAAiC,UAAA,EAAAC,IAAA;YACA,8BAAAA,IAAA,CAAAZ,CAAA,CAAAI,OAAA,CAAAxC,MAAA,CAAAgD,IAAA,CAAAd,WAAA,MAAAa,UAAA;UACA;QACA;QACA/C,MAAA,OAAAL,UAAA,CAAAK;MACA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}