{"ast":null,"code":"import ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'ValChart',\n  components: {\n    ApexChart\n  },\n  props: {\n    width: {\n      type: [Number, String],\n      default: '95%'\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: [],\n        percentChanges: []\n      })\n    },\n    data() {\n      return {\n        horizontalTotal: true\n      };\n    }\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          type: 'bar',\n          stacked: true,\n          height: '100%',\n          animations: {\n            enabled: true,\n            speed: 800\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          offsetX: -6,\n          style: {\n            fontSize: '11px',\n            fontWeight: 400,\n            fontFamily: 'Montserrat-Regular',\n            colors: ['#ffffff']\n          },\n          formatter: val => val.toFixed(1),\n          total: {\n            enabled: true,\n            offsetX: 10,\n            offsetY: -20,\n            style: {\n              fontSize: '14px',\n              fontWeight: 'normal',\n              color: '#ffffff'\n            },\n            formatter: (val, opts) => {\n              const seriesIndex = opts.seriesIndex;\n              const dataPointIndex = opts.dataPointIndex;\n              if (seriesIndex === opts.w.config.series.length - 1) {\n                const customTotals = opts.w.config.customTotals || [];\n                const [percent, total] = customTotals[dataPointIndex] || ['0%', 0];\n                const color = percent.startsWith('-') ? '#FF4D4F' : '#52C41A';\n                opts.w.config.dataLabels.style.colors = [color];\n                console.log(`Custom label: ${percent}, ${total.toFixed(1)} for category ${opts.w.config.xaxis.categories[dataPointIndex]}`);\n                return [percent, total.toFixed(1)];\n              }\n              return val.toFixed(1);\n            },\n            enabledOnSeries: [0, 1]\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            barHeight: '70%'\n          }\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          show: false\n        },\n        tooltip: {\n          shared: false,\n          intersect: true,\n          custom: ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) => {\n            const category = w.config.xaxis.categories[dataPointIndex];\n            const value = series[seriesIndex][dataPointIndex];\n            const color = w.globals.colors[seriesIndex];\n            return `\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\n                <strong>${category}:</strong> ${value}\n              </div>\n            `;\n          }\n        },\n        xaxis: {\n          categories: this.dataSource.categories,\n          labels: {\n            style: {\n              colors: '#ffffff',\n              fontSize: '11px'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        yaxis: {\n          labels: {\n            offsetX: 5,\n            style: {\n              colors: '#ffffff'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        legend: {\n          position: 'bottom',\n          offsetY: -10,\n          fontSize: '9px',\n          fontFamily: 'Montserrat-Regular, sans-serif',\n          markers: {\n            width: 10,\n            height: 10,\n            borderRadius: 10,\n            strokeWidth: 0\n          },\n          itemMargin: {\n            horizontal: 5,\n            vertical: 15\n          },\n          formatter: (seriesName, opts) => {\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\n          }\n        },\n        colors: this.dataSource.colors,\n        responsive: [{\n          breakpoint: 1000,\n          options: {\n            plotOptions: {\n              bar: {\n                horizontal: true\n              }\n            }\n          }\n        }]\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","width","type","Number","String","default","dataSource","Object","required","series","categories","colors","percentChanges","data","horizontalTotal","computed","chartOptions","chart","stacked","height","animations","enabled","speed","toolbar","show","dataLabels","offsetX","style","fontSize","fontWeight","fontFamily","formatter","val","toFixed","total","offsetY","color","opts","seriesIndex","dataPointIndex","w","config","length","customTotals","percent","startsWith","console","log","xaxis","enabledOnSeries","plotOptions","bar","horizontal","barHeight","grid","stroke","tooltip","shared","intersect","custom","category","value","globals","labels","axisBorder","axisTicks","yaxis","legend","position","markers","borderRadius","strokeWidth","itemMargin","vertical","seriesName","responsive","breakpoint","options"],"sources":["src/components/ValChart.vue"],"sourcesContent":["<template>\r\n    <ApexChart\r\n      type=\"bar\"\r\n      height=\"100%\"\r\n      :width=\"width\"\r\n      :options=\"chartOptions\"\r\n      :series=\"dataSource.series\"\r\n    />\r\n</template>\r\n\r\n<script>\r\nimport ApexChart from 'vue-apexcharts';\r\n\r\nexport default {\r\n  name: 'ValChart',\r\n  components: { ApexChart },\r\n  props: {\r\n    width: {\r\n      type: [Number, String],\r\n      default: '95%',\r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n        percentChanges: [],\r\n      }),\r\n    },\r\n    data() {\r\n    return {\r\n      horizontalTotal: true, \r\n    };\r\n  },\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      return {\r\n        chart: {\r\n          type: 'bar',\r\n          stacked: true,\r\n          height: '100%',\r\n          animations: {\r\n            enabled: true,\r\n            speed: 800,\r\n          },\r\n          toolbar: { show: false },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          offsetX: -6,\r\n          style: {\r\n            fontSize: '11px',\r\n            fontWeight: 400,\r\n            fontFamily: 'Montserrat-Regular',\r\n            colors: ['#ffffff'],\r\n          },\r\n          formatter: (val) => val.toFixed(1),\r\n            \r\n              total: {\r\n            enabled: true,\r\n            offsetX: 10,\r\n            offsetY: -20,\r\n            style: {\r\n              fontSize: '14px',\r\n              fontWeight: 'normal',\r\n              color: '#ffffff'\r\n            },\r\n            formatter: (val, opts) => {\r\n    const seriesIndex = opts.seriesIndex;\r\n    const dataPointIndex = opts.dataPointIndex;\r\n    if (seriesIndex === opts.w.config.series.length - 1) {\r\n      const customTotals = opts.w.config.customTotals || [];\r\n      const [percent, total] = customTotals[dataPointIndex] || ['0%', 0];\r\n      const color = percent.startsWith('-') ? '#FF4D4F' : '#52C41A';\r\n      opts.w.config.dataLabels.style.colors = [color];\r\n      console.log(`Custom label: ${percent}, ${total.toFixed(1)} for category ${opts.w.config.xaxis.categories[dataPointIndex]}`);\r\n      return [percent, total.toFixed(1)];\r\n    }\r\n    return val.toFixed(1);\r\n  },\r\n  enabledOnSeries: [0, 1],\r\n        },\r\n              \r\n            },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            barHeight: '70%',\r\n            \r\n          },\r\n        },\r\n        \r\n        grid: { show: false },\r\n        stroke: { show: false },\r\n        tooltip: {\r\n          shared: false,\r\n          intersect: true,\r\n          custom: ({ series, seriesIndex, dataPointIndex, w }) => {\r\n            const category = w.config.xaxis.categories[dataPointIndex];\r\n            const value = series[seriesIndex][dataPointIndex];\r\n            const color = w.globals.colors[seriesIndex];\r\n            return `\r\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\r\n                <strong>${category}:</strong> ${value}\r\n              </div>\r\n            `;\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: this.dataSource.categories,\r\n          labels: {\r\n            style: {\r\n              colors: '#ffffff',\r\n              fontSize: '11px',\r\n            },\r\n          },\r\n          axisBorder: { show: true, color: '#4b3f3f' },\r\n          axisTicks: { show: true, color: '#4b3f3f' },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            offsetX: 5,\r\n            style: { colors: '#ffffff' },\r\n          },\r\n          axisBorder: { show: true, color: '#4b3f3f' },\r\n          axisTicks: { show: true, color: '#4b3f3f' },\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetY: -10,\r\n          fontSize: '9px',\r\n          fontFamily: 'Montserrat-Regular, sans-serif',\r\n          markers: {\r\n            width: 10,\r\n            height: 10,\r\n            borderRadius: 10,\r\n            strokeWidth: 0,\r\n          },\r\n          itemMargin: {\r\n            horizontal: 5,\r\n            vertical: 15,\r\n          },\r\n          formatter: (seriesName, opts) => {\r\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\r\n          },\r\n        },\r\n        colors: this.dataSource.colors,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              plotOptions: {\r\n                bar: { horizontal: true },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}