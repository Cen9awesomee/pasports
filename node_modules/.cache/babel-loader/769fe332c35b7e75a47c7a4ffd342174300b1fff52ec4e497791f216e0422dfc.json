{"ast":null,"code":"import ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'VerticalStackBars',\n  components: {\n    ApexChart\n  },\n  props: {\n    height: {\n      type: [Number, String],\n      default: 200\n    },\n    width: {\n      type: [Number, String],\n      default: '100%'\n    },\n    columnWidth: {\n      type: String,\n      default: '35%'\n    },\n    stacked: {\n      type: Boolean,\n      default: false\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: []\n      })\n    }\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          height: this.height,\n          type: 'bar',\n          toolbar: {\n            show: false\n          },\n          stacked: this.stacked\n        },\n        plotOptions: {\n          bar: {\n            dataLabels: {\n              position: 'top'\n            },\n            columnWidth: this.columnWidth,\n            distributed: true\n          }\n        },\n        fill: {\n          colors: this.dataSource.colors\n        },\n        dataLabels: {\n          enabled: true,\n          offsetY: -18,\n          formatter: val => val,\n          style: {\n            fontFamily: 'Montserrat-Regular, sans-serif',\n            fontSize: '11px',\n            fontWeight: 400,\n            colors: ['#ffffff']\n          }\n        },\n        grid: {\n          show: false\n        },\n        xaxis: {\n          categories: this.dataSource.categories,\n          labels: {\n            style: {\n              colors: '#ffffff',\n              fontSize: '11px'\n            }\n          },\n          position: 'bottom',\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        yaxis: {\n          tickAmount: 6,\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          labels: {\n            show: true,\n            formatter: function (val) {\n              return val;\n            },\n            style: {\n              colors: '#ffffff'\n            }\n          }\n        },\n        tooltip: {\n          shared: false,\n          intersect: true,\n          style: {\n            fontFamily: 'Montserrat-Regular, sans-serif',\n            fontSize: '10px'\n          },\n          custom: function ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) {\n            const category = w.config.xaxis.categories[dataPointIndex];\n            const value = series[seriesIndex][dataPointIndex];\n            const color = w.globals.colors[dataPointIndex];\n            return `\n                <div style=\"padding: 5px; background: ${color}; color: #fff; border-radius: 0; font-size: 10px; border: none;\">\n                    <strong>${category}:</strong> ${value}\n                </div>\n            `;\n          }\n        },\n        legend: {\n          show: true\n        },\n        colors: this.dataSource.colors\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","height","type","Number","String","default","width","columnWidth","stacked","Boolean","dataSource","Object","required","series","categories","colors","computed","chartOptions","chart","toolbar","show","plotOptions","bar","dataLabels","position","distributed","fill","enabled","offsetY","formatter","val","style","fontFamily","fontSize","fontWeight","grid","xaxis","labels","axisBorder","color","axisTicks","yaxis","tickAmount","tooltip","shared","intersect","custom","seriesIndex","dataPointIndex","w","category","config","value","globals","legend"],"sources":["src/components/charts/VerticalStackBars.vue"],"sourcesContent":["<template>\r\n<ApexChart\r\n      type=\"bar\"\r\n      :height=\"height\"\r\n      :width=\"width\"\r\n      :options=\"chartOptions\"\r\n      :series=\"dataSource.series\"\r\n    ></ApexChart>\r\n  </template>\r\n  \r\n  <script>\r\n  import ApexChart from 'vue-apexcharts';\r\n  \r\n  export default {\r\n    name: 'VerticalStackBars',\r\n    components: {\r\n      ApexChart,\r\n    },\r\n    props: {\r\n    height: {\r\n      type: [Number, String],\r\n      default: 200,\r\n    },\r\n    width: {\r\n      type: [Number, String],\r\n      default: '100%',\r\n    },\r\n    columnWidth: {\r\n      type: String,\r\n      default: '35%',\r\n    },\r\n    stacked: {\r\n      type: Boolean,\r\n      default: false, \r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n      }),\r\n    },\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      return {\r\n        chart: {\r\n          height: this.height,\r\n          type: 'bar',\r\n          toolbar: { show: false },\r\n          stacked: this.stacked,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            dataLabels: {\r\n            position: 'top',    \r\n          },\r\n          columnWidth: this.columnWidth, \r\n          distributed: true\r\n        },\r\n      },\r\n      fill: {\r\n        colors: this.dataSource.colors,\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n        offsetY: -18,\r\n        formatter: (val) => val, \r\n        style: {\r\n          fontFamily: 'Montserrat-Regular, sans-serif',\r\n          fontSize: '11px', \r\n          fontWeight: 400, \r\n          colors: ['#ffffff'],\r\n        },\r\n      },\r\n      grid: {\r\n        show: false, \r\n      },\r\n      xaxis: {\r\n        categories: this.dataSource.categories,\r\n          labels: {\r\n            style: {\r\n              colors: '#ffffff', \r\n              fontSize: '11px',\r\n            },\r\n          },\r\n          position: 'bottom', \r\n            axisBorder: {\r\n              show: true, \r\n              color: '#4b3f3f'\r\n            },\r\n            axisTicks: {\r\n              show: true, \r\n              color: '#4b3f3f'\r\n            },\r\n      },\r\n      yaxis: {\r\n        tickAmount: 6, \r\n          axisBorder: {\r\n            show: true, \r\n            color: '#4b3f3f'\r\n          },\r\n          axisTicks: {\r\n            show: true, \r\n            color: '#4b3f3f'\r\n          },\r\n          labels: {\r\n            show: true,\r\n            formatter: function (val) {\r\n              return val; \r\n            },\r\n            style: {\r\n              colors: '#ffffff', \r\n            },\r\n          },\r\n      },\r\n      tooltip: {\r\n        shared: false, \r\n          intersect: true, \r\n            style: {\r\n              fontFamily: 'Montserrat-Regular, sans-serif', \r\n              fontSize: '10px', \r\n            },\r\n            custom: function ({ series, seriesIndex, dataPointIndex, w }) {\r\n            const category = w.config.xaxis.categories[dataPointIndex]; \r\n            const value = series[seriesIndex][dataPointIndex]; \r\n            const color = w.globals.colors[dataPointIndex]; \r\n            return `\r\n                <div style=\"padding: 5px; background: ${color}; color: #fff; border-radius: 0; font-size: 10px; border: none;\">\r\n                    <strong>${category}:</strong> ${value}\r\n                </div>\r\n            `; \r\n            },\r\n      },\r\n      legend: {\r\n        show: true, \r\n      },\r\n      colors: this.dataSource.colors,\r\n    };\r\n    },\r\n  },\r\n};\r\n  </script> "],"mappings":"AAWA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,MAAA;MACAC,IAAA,GAAAC,MAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAJ,IAAA,GAAAC,MAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,WAAA;MACAL,IAAA,EAAAE,MAAA;MACAC,OAAA;IACA;IACAG,OAAA;MACAN,IAAA,EAAAO,OAAA;MACAJ,OAAA;IACA;IACAK,UAAA;MACAR,IAAA,EAAAS,MAAA;MACAC,QAAA;MACAP,OAAA,EAAAA,CAAA;QACAQ,MAAA;QACAC,UAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA;QACAC,KAAA;UACAjB,MAAA,OAAAA,MAAA;UACAC,IAAA;UACAiB,OAAA;YAAAC,IAAA;UAAA;UACAZ,OAAA,OAAAA;QACA;QACAa,WAAA;UACAC,GAAA;YACAC,UAAA;cACAC,QAAA;YACA;YACAjB,WAAA,OAAAA,WAAA;YACAkB,WAAA;UACA;QACA;QACAC,IAAA;UACAX,MAAA,OAAAL,UAAA,CAAAK;QACA;QACAQ,UAAA;UACAI,OAAA;UACAC,OAAA;UACAC,SAAA,EAAAC,GAAA,IAAAA,GAAA;UACAC,KAAA;YACAC,UAAA;YACAC,QAAA;YACAC,UAAA;YACAnB,MAAA;UACA;QACA;QACAoB,IAAA;UACAf,IAAA;QACA;QACAgB,KAAA;UACAtB,UAAA,OAAAJ,UAAA,CAAAI,UAAA;UACAuB,MAAA;YACAN,KAAA;cACAhB,MAAA;cACAkB,QAAA;YACA;UACA;UACAT,QAAA;UACAc,UAAA;YACAlB,IAAA;YACAmB,KAAA;UACA;UACAC,SAAA;YACApB,IAAA;YACAmB,KAAA;UACA;QACA;QACAE,KAAA;UACAC,UAAA;UACAJ,UAAA;YACAlB,IAAA;YACAmB,KAAA;UACA;UACAC,SAAA;YACApB,IAAA;YACAmB,KAAA;UACA;UACAF,MAAA;YACAjB,IAAA;YACAS,SAAA,WAAAA,CAAAC,GAAA;cACA,OAAAA,GAAA;YACA;YACAC,KAAA;cACAhB,MAAA;YACA;UACA;QACA;QACA4B,OAAA;UACAC,MAAA;UACAC,SAAA;UACAd,KAAA;YACAC,UAAA;YACAC,QAAA;UACA;UACAa,MAAA,WAAAA,CAAA;YAAAjC,MAAA;YAAAkC,WAAA;YAAAC,cAAA;YAAAC;UAAA;YACA,MAAAC,QAAA,GAAAD,CAAA,CAAAE,MAAA,CAAAf,KAAA,CAAAtB,UAAA,CAAAkC,cAAA;YACA,MAAAI,KAAA,GAAAvC,MAAA,CAAAkC,WAAA,EAAAC,cAAA;YACA,MAAAT,KAAA,GAAAU,CAAA,CAAAI,OAAA,CAAAtC,MAAA,CAAAiC,cAAA;YACA;AACA,wDAAAT,KAAA;AACA,8BAAAW,QAAA,cAAAE,KAAA;AACA;AACA;UACA;QACA;QACAE,MAAA;UACAlC,IAAA;QACA;QACAL,MAAA,OAAAL,UAAA,CAAAK;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}