{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport MapCard from './MapCard.vue';\nexport default {\n  name: 'PageWithBackground',\n  components: {\n    MapCard\n  },\n  props: {\n    backgroundColor: {\n      type: String,\n      default: '#4d4a4a'\n    }\n  },\n  data() {\n    return {\n      activeModule: 1,\n      activeLink: null,\n      selectedLanguage: 'Русский',\n      isPopoverVisible: false,\n      popoverStyles: {},\n      moduleLinks: {\n        1: [{\n          href: \"http://general:81/dist/\",\n          icon: \"fa-solid fa-chart-line\",\n          label: \"Общие сведения\"\n        }, {\n          href: \"http://lastvue:81/dist/\",\n          icon: \"fa-solid fa-users-line\",\n          label: \"Переселенцы\"\n        }, {\n          href: \"http://kandas:81/dist/\",\n          icon: \"fa-solid fa-user-shield\",\n          label: \"Кандасы\"\n        }, {\n          href: \"http://demography:81/dist/\",\n          icon: \"fa-solid fa-users\",\n          label: \"Демография\"\n        }, {\n          href: \"http://health:81/dist/\",\n          icon: \"fa-solid fa-stethoscope\",\n          label: \"Здравоохранение\"\n        }, {\n          href: \"http://trade:81/dist/\",\n          icon: \"fa-solid fa-cash-register\",\n          label: \"Торговля\"\n        }, {\n          href: \"http://animal:81/dist/\",\n          icon: \"fa-solid fa-cow\",\n          label: \"Животноводство\"\n        }, {\n          href: \"http://plant:81/dist/\",\n          icon: \"fa-solid fa-plant-wilt\",\n          label: \"Растениеводство\"\n        }],\n        2: [],\n        3: []\n      },\n      hashMapping: {\n        \"/general/dist/index.html\": \"#general\",\n        \"/health/dist/index.html\": \"#health\",\n        \"/kandas/dist/index.html\": \"#kandas\",\n        \"/lastvue/dist/index.html\": \"#lastvue\",\n        \"/demography/dist/index.html\": \"#demography\",\n        \"/trade/dist/index.html\": \"#trade\",\n        \"/animal/dist/index.html\": \"#animal\",\n        \"/plant/dist/index.html\": \"#plant\"\n      }\n    };\n  },\n  computed: {\n    pageStyles() {\n      return {\n        backgroundColor: this.backgroundColor\n      };\n    }\n  },\n  methods: {\n    togglePopover() {\n      this.isPopoverVisible = !this.isPopoverVisible;\n      if (this.isPopoverVisible) {\n        this.$nextTick(() => {\n          this.positionPopover();\n        });\n      }\n    },\n    positionPopover() {\n      const button = this.$refs.langToggle;\n      if (!button) return;\n      const buttonRect = button.getBoundingClientRect();\n      const offset = 5; // Match v-tooltip offset\n      const popoverWidth = 200; // Match .lang-tooltip width\n      const arrowSize = 5; // Match .tooltip-arrow border-width\n\n      // Position popover at bottom-end\n      const left = buttonRect.right - popoverWidth;\n      const top = buttonRect.bottom + offset + arrowSize;\n      this.popoverStyles = {\n        position: 'fixed',\n        top: `${top}px`,\n        left: `${left}px`,\n        zIndex: 1000\n      };\n    },\n    closePopover() {\n      this.isPopoverVisible = false;\n    },\n    selectModule(moduleId) {\n      this.activeModule = moduleId;\n    },\n    setActiveLink(linkHref) {\n      this.activeLink = linkHref;\n    },\n    initializeActiveLink() {\n      const currentUrl = window.location.href;\n      const allLinks = Object.values(this.moduleLinks).flat();\n      const matchingLink = allLinks.find(link => currentUrl.startsWith(link.href));\n      if (matchingLink) {\n        this.activeLink = matchingLink.href;\n        this.activeModule = this.getModuleByLink(matchingLink.href);\n      } else if (allLinks.length) {\n        const firstLink = allLinks[0];\n        this.activeLink = firstLink.href;\n        this.activeModule = this.getModuleByLink(firstLink.href);\n      }\n    },\n    getModuleByLink(linkHref) {\n      for (const [module, links] of Object.entries(this.moduleLinks)) {\n        if (links.some(link => link.href === linkHref)) {\n          return parseInt(module);\n        }\n      }\n      return 1;\n    },\n    selectLanguage(lang) {\n      this.selectedLanguage = lang;\n    },\n    handleDocumentClick(event) {\n      const langToggle = this.$refs.langToggle;\n      const popover = this.$refs.popover;\n      const clickedInsideButton = langToggle && langToggle.contains(event.target);\n      const clickedInsidePopover = popover && popover.contains(event.target);\n      if (!clickedInsideButton && !clickedInsidePopover) {\n        this.closePopover();\n      }\n    }\n  },\n  mounted() {\n    this.initializeActiveLink();\n    window.selectLanguage = this.selectLanguage.bind(this);\n    document.addEventListener('click', this.handleDocumentClick, true);\n    // Update popover position on window resize\n    window.addEventListener('resize', this.positionPopover);\n  },\n  beforeDestroy() {\n    window.selectLanguage = null;\n    document.removeEventListener('click', this.handleDocumentClick, true);\n    window.removeEventListener('resize', this.positionPopover);\n  }\n};","map":{"version":3,"names":["MapCard","name","components","props","backgroundColor","type","String","default","data","activeModule","activeLink","selectedLanguage","isPopoverVisible","popoverStyles","moduleLinks","href","icon","label","hashMapping","computed","pageStyles","methods","togglePopover","$nextTick","positionPopover","button","$refs","langToggle","buttonRect","getBoundingClientRect","offset","popoverWidth","arrowSize","left","right","top","bottom","position","zIndex","closePopover","selectModule","moduleId","setActiveLink","linkHref","initializeActiveLink","currentUrl","window","location","allLinks","Object","values","flat","matchingLink","find","link","startsWith","getModuleByLink","length","firstLink","module","links","entries","some","parseInt","selectLanguage","lang","handleDocumentClick","event","popover","clickedInsideButton","contains","target","clickedInsidePopover","mounted","bind","document","addEventListener","beforeDestroy","removeEventListener"],"sources":["src/components/PageWithBackground.vue"],"sourcesContent":["<script>\r\nimport MapCard from './MapCard.vue';\r\n\r\nexport default {\r\n  name: 'PageWithBackground',\r\n  components: {\r\n    MapCard\r\n  },\r\n  props: {\r\n    backgroundColor: {\r\n      type: String,\r\n      default: '#4d4a4a'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activeModule: 1,\r\n      activeLink: null,\r\n      selectedLanguage: 'Русский',\r\n      isPopoverVisible: false,\r\n      popoverStyles: {},\r\n      moduleLinks: {\r\n        1: [\r\n          { href: \"http://general:81/dist/\", icon: \"fa-solid fa-chart-line\", label: \"Общие сведения\" },\r\n          { href: \"http://lastvue:81/dist/\", icon: \"fa-solid fa-users-line\", label: \"Переселенцы\" },\r\n          { href: \"http://kandas:81/dist/\", icon: \"fa-solid fa-user-shield\", label: \"Кандасы\" },\r\n          { href: \"http://demography:81/dist/\", icon: \"fa-solid fa-users\", label: \"Демография\" },\r\n          { href: \"http://health:81/dist/\", icon: \"fa-solid fa-stethoscope\", label: \"Здравоохранение\" },\r\n          { href: \"http://trade:81/dist/\", icon: \"fa-solid fa-cash-register\", label: \"Торговля\" },\r\n          { href: \"http://animal:81/dist/\", icon: \"fa-solid fa-cow\", label: \"Животноводство\" },\r\n          { href: \"http://plant:81/dist/\", icon: \"fa-solid fa-plant-wilt\", label: \"Растениеводство\" }\r\n        ],\r\n        2: [],\r\n        3: []\r\n      },\r\n      hashMapping: {\r\n        \"/general/dist/index.html\": \"#general\",\r\n        \"/health/dist/index.html\": \"#health\",\r\n        \"/kandas/dist/index.html\": \"#kandas\",\r\n        \"/lastvue/dist/index.html\": \"#lastvue\",\r\n        \"/demography/dist/index.html\": \"#demography\",\r\n        \"/trade/dist/index.html\": \"#trade\",\r\n        \"/animal/dist/index.html\": \"#animal\",\r\n        \"/plant/dist/index.html\": \"#plant\"\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    pageStyles() {\r\n      return {\r\n        backgroundColor: this.backgroundColor\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    togglePopover() {\r\n      this.isPopoverVisible = !this.isPopoverVisible;\r\n      if (this.isPopoverVisible) {\r\n        this.$nextTick(() => {\r\n          this.positionPopover();\r\n        });\r\n      }\r\n    },\r\n    positionPopover() {\r\n      const button = this.$refs.langToggle;\r\n      if (!button) return;\r\n\r\n      const buttonRect = button.getBoundingClientRect();\r\n      const offset = 5; // Match v-tooltip offset\r\n      const popoverWidth = 200; // Match .lang-tooltip width\r\n      const arrowSize = 5; // Match .tooltip-arrow border-width\r\n\r\n      // Position popover at bottom-end\r\n      const left = buttonRect.right - popoverWidth;\r\n      const top = buttonRect.bottom + offset + arrowSize;\r\n\r\n      this.popoverStyles = {\r\n        position: 'fixed',\r\n        top: `${top}px`,\r\n        left: `${left}px`,\r\n        zIndex: 1000\r\n      };\r\n    },\r\n    closePopover() {\r\n      this.isPopoverVisible = false;\r\n    },\r\n    selectModule(moduleId) {\r\n      this.activeModule = moduleId;\r\n    },\r\n    setActiveLink(linkHref) {\r\n      this.activeLink = linkHref;\r\n    },\r\n    initializeActiveLink() {\r\n      const currentUrl = window.location.href;\r\n      const allLinks = Object.values(this.moduleLinks).flat();\r\n      const matchingLink = allLinks.find(link => currentUrl.startsWith(link.href));\r\n      if (matchingLink) {\r\n        this.activeLink = matchingLink.href;\r\n        this.activeModule = this.getModuleByLink(matchingLink.href);\r\n      } else if (allLinks.length) {\r\n        const firstLink = allLinks[0];\r\n        this.activeLink = firstLink.href;\r\n        this.activeModule = this.getModuleByLink(firstLink.href);\r\n      }\r\n    },\r\n    getModuleByLink(linkHref) {\r\n      for (const [module, links] of Object.entries(this.moduleLinks)) {\r\n        if (links.some(link => link.href === linkHref)) {\r\n          return parseInt(module);\r\n        }\r\n      }\r\n      return 1;\r\n    },\r\n    selectLanguage(lang) {\r\n      this.selectedLanguage = lang;\r\n    },\r\n    handleDocumentClick(event) {\r\n      const langToggle = this.$refs.langToggle;\r\n      const popover = this.$refs.popover;\r\n\r\n      const clickedInsideButton = langToggle && langToggle.contains(event.target);\r\n      const clickedInsidePopover = popover && popover.contains(event.target);\r\n\r\n      if (!clickedInsideButton && !clickedInsidePopover) {\r\n        this.closePopover();\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initializeActiveLink();\r\n    window.selectLanguage = this.selectLanguage.bind(this);\r\n    document.addEventListener('click', this.handleDocumentClick, true);\r\n    // Update popover position on window resize\r\n    window.addEventListener('resize', this.positionPopover);\r\n  },\r\n  beforeDestroy() {\r\n    window.selectLanguage = null;\r\n    document.removeEventListener('click', this.handleDocumentClick, true);\r\n    window.removeEventListener('resize', this.positionPopover);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.main-wrapper {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  background-color: #1f2324;\r\n  justify-content: space-between;\r\n}\r\n\r\n.navigation-menu {\r\n  width: 220px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: #1f2324;\r\n  color: white;\r\n  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);\r\n  margin-right: 10px;\r\n}\r\n\r\n.navigation-modules {\r\n  width: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  background-color: #23272a;\r\n  padding: 0;\r\n}\r\n\r\n.module-icon {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 35px;\r\n  font-size: 18px;\r\n  color: #b9bbbe;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s, color 0.2s;\r\n}\r\n\r\n.module-icon.active {\r\n  background-color: #4d4a4a;\r\n  color: white;\r\n  border-radius: 5px;\r\n}\r\n\r\n.module-icon:hover {\r\n  color: white;\r\n}\r\n\r\n.navigation-links {\r\n  flex-grow: 1;\r\n  width: 180px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: stretch;\r\n}\r\n\r\n.link {\r\n  display: flex;\r\n  align-items: stretch;\r\n  color: #b9bbbe;\r\n  text-decoration: none;\r\n  font-size: 13px;\r\n  transition: color 0.2s, background-color 0.2s;\r\n  width: 100%;\r\n  padding: 5px 5px;\r\n}\r\n\r\n.link.active {\r\n  background-color: #4d4a4a;\r\n  color: white;\r\n  border-radius: 5px;\r\n}\r\n\r\n.link i {\r\n  margin-right: 5px;\r\n  font-size: 15px;\r\n}\r\n\r\n.link:hover {\r\n  color: white;\r\n}\r\n\r\n.page-header {\r\n  background-color: #1f2324;\r\n  padding: 10px;\r\n  color: white;\r\n}\r\n\r\n.header-content {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.page-header h1 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.page-content {\r\n  flex-grow: 1;\r\n  padding: 0px;\r\n}\r\n</style>  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}