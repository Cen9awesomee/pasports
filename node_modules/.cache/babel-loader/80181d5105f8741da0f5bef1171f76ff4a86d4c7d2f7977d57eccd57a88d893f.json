{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport MapComponent from './MapComponent.vue';\nimport RoadChart from './RoadChart.vue';\nimport CountUp from 'vue-countup-v2';\nexport default {\n  name: 'FirstSlide',\n  components: {\n    MapComponent,\n    RoadChart,\n    CountUp\n  },\n  props: {\n    regionItems: Array,\n    sortBy: String,\n    sortDesc: Boolean,\n    headers: Array,\n    roadChartData: Object\n  },\n  methods: {\n    selectedRegion() {\n      return this.regionItems.find(region => String(region.id) === String(this.selectedRegionId || '14')) || null;\n    },\n    handleRegionSelect(regionId) {\n      this.selectedRegionId = regionId;\n    },\n    handleTooltipShow({\n      region,\n      event\n    }) {\n      const regionName = region.name;\n      const fertility2023 = region.fertility['2023'];\n      const fertility2024 = region.fertility['2024'];\n      const mortality2023 = region.mortality['2023'];\n      const mortality2024 = region.mortality['2024'];\n      let fertilityTrend = '';\n      let fertilityIconClass = '';\n      const fert2023 = parseFloat(fertility2023);\n      const fert2024 = parseFloat(fertility2024);\n      if (fert2024 < fert2023) {\n        fertilityTrend = '<i class=\"fas fa-caret-down\"></i>';\n        fertilityIconClass = 'fertility-icon';\n      } else {\n        fertilityTrend = '<i class=\"fas fa-caret-up\"></i>';\n        fertilityIconClass = 'mortality-icon';\n      }\n      let mortalityTrend = '';\n      let mortalityIconClass = '';\n      const mortal2023 = parseFloat(mortality2023);\n      const mortal2024 = parseFloat(mortality2024);\n      if (mortal2024 < mortal2023) {\n        mortalityTrend = '<i class=\"fas fa-caret-down\"></i>';\n        mortalityIconClass = 'mortality-icon';\n      } else {\n        mortalityTrend = '<i class=\"fas fa-caret-up\"></i>';\n        mortalityIconClass = 'fertility-icon';\n      }\n      const html = `\n        <div class=\"tooltip-content\">\n          <div class=\"tooltip-title\">${regionName}</div>\n          <div class=\"tooltip-section\">\n            <span class=\"tooltip-label\">Рождаемость</span><br>\n            <span class=\"tooltip-year\">2023г. - ${fertility2023}</span>\n            <div class=\"tooltip-year-with-icon\">\n              <span class=\"tooltip-year\">2024г. - ${fertility2024}</span>\n              <span class=\"tooltip-icon ${fertilityIconClass}\">${fertilityTrend}</span>\n            </div>\n          </div>\n          <div class=\"tooltip-section\">\n            <span class=\"tooltip-label\">Смертность</span><br>\n            <span class=\"tooltip-year\">2023г. - ${mortality2023}</span>\n            <div class=\"tooltip-year-with-icon\">\n              <span class=\"tooltip-year\">2024г. - ${mortality2024}</span>\n              <span class=\"tooltip-icon ${mortalityIconClass}\">${mortalityTrend}</span>\n            </div>\n          </div>\n        </div>\n      `;\n      this.tooltipHtml = String(html);\n      this.tooltipEvent = {\n        position: {\n          x: event.clientX,\n          y: event.clientY\n        }\n      };\n    },\n    customizePathColors() {\n      const styles = {};\n      this.regionItems.forEach(region => {\n        const regionId = String(region.id);\n        if (region.percentage) {\n          const percentage = parseFloat(region.percentage) || 0;\n          if (percentage >= 75) {\n            styles[regionId] = 'rgb(104, 159, 56)';\n          } else if (percentage >= 25) {\n            styles[regionId] = 'rgb(51, 105, 30)';\n          } else {\n            styles[regionId] = 'rgb(124, 179, 66)';\n          }\n        } else {\n          styles[regionId] = 'rgb(189, 189, 189)';\n        }\n      });\n      return styles;\n    },\n    customizePathTexts() {\n      const texts = {};\n      this.regionItems.forEach(region => {\n        const regionId = String(region.id);\n        texts[regionId] = region.percentage || '';\n      });\n      return texts;\n    },\n    getFertilityPercent(item) {\n      return parseFloat(item.fertility['2024']) / 15 * 100;\n    },\n    getMortalityPercent(item) {\n      return parseFloat(item.mortality['2024']) / 15 * 100;\n    },\n    getCountUpOptions(value) {\n      const numStr = value.toString();\n      const decimalIndex = numStr.indexOf('.');\n      const decimalPlaces = decimalIndex !== -1 ? numStr.length - decimalIndex - 1 : 0;\n      return {\n        separator: ' ',\n        duration: 2,\n        useEasing: true,\n        decimalPlaces: decimalPlaces,\n        decimal: '.'\n      };\n    },\n    customSort(items, sortBy, sortDesc) {\n      if (!sortBy || !sortBy.length) return items;\n      const key = sortBy[0];\n      const desc = sortDesc[0];\n      return items.slice().sort((a, b) => {\n        let valA = a[key];\n        let valB = b[key];\n        if (typeof valA === 'object' && valA !== null) {\n          valA = parseFloat(valA['2024']) || 0;\n        }\n        if (typeof valB === 'object' && valB !== null) {\n          valB = parseFloat(valB['2024']) || 0;\n        }\n        if (typeof valA === 'string' && typeof valB === 'string') {\n          valA = valA.toLowerCase();\n          valB = valB.toLowerCase();\n        }\n        if (valA < valB) return desc ? 1 : -1;\n        if (valA > valB) return desc ? -1 : 1;\n        return 0;\n      });\n    }\n  }\n};","map":{"version":3,"names":["MapComponent","RoadChart","CountUp","name","components","props","regionItems","Array","sortBy","String","sortDesc","Boolean","headers","roadChartData","Object","methods","selectedRegion","find","region","id","selectedRegionId","handleRegionSelect","regionId","handleTooltipShow","event","regionName","fertility2023","fertility","fertility2024","mortality2023","mortality","mortality2024","fertilityTrend","fertilityIconClass","fert2023","parseFloat","fert2024","mortalityTrend","mortalityIconClass","mortal2023","mortal2024","html","tooltipHtml","tooltipEvent","position","x","clientX","y","clientY","customizePathColors","styles","forEach","percentage","customizePathTexts","texts","getFertilityPercent","item","getMortalityPercent","getCountUpOptions","value","numStr","toString","decimalIndex","indexOf","decimalPlaces","length","separator","duration","useEasing","decimal","customSort","items","key","desc","slice","sort","a","b","valA","valB","toLowerCase"],"sources":["src/components/FirstSlide.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container first-page\">\r\n    <div class=\"chart-card chart-card-first\">\r\n      <div class=\"card-header\">Административно-территориальное деление области</div>\r\n      <div class=\"card-content\">\r\n        <map-component\r\n          :region-items=\"regionItems\"\r\n          :path-data-customization-method=\"customizePathColors\"\r\n          :text-data-customization-method=\"customizePathTexts\"\r\n          :zoom-on-select=\"false\"\r\n          :selected-region-id=\"selectedRegionId\"\r\n          :tooltip-html-external=\"tooltipHtml\"\r\n          :tooltip-event=\"tooltipEvent\"\r\n          @region-selected=\"handleRegionSelect\"\r\n          @tooltip-show=\"handleTooltipShow\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"chart-card chart-card-second\">\r\n      <div class=\"card-header\">Общий уровень смертности и рождаемости, чел. на 1 тыс. чел.</div>\r\n      <div class=\"card-content\">\r\n        <div class=\"table-scroll-container\">\r\n          <v-data-table\r\n            :headers=\"headers\"\r\n            :items=\"regionItems\"\r\n            :custom-sort=\"customSort\"\r\n            :sort-by=\"sortBy\"\r\n            :sort-desc=\"sortDesc\"\r\n            height=\"calc(20vh - 150px)\"\r\n            class=\"custom-table elevation-1\"\r\n            disable-pagination\r\n            hide-default-footer\r\n          >\r\n            <template slot=\"item.fertility\" slot-scope=\"{ item }\">\r\n              <div class=\"progress-container\">\r\n                <v-progress-linear\r\n                  :value=\"getFertilityPercent(item)\"\r\n                  height=\"18\"\r\n                  color=\"rgb(76, 175, 80)\"\r\n                  rounded\r\n                />\r\n                <div class=\"progress-label\">{{ item.fertility['2024'] }}</div>\r\n              </div>\r\n            </template>\r\n            <template slot=\"item.mortality\" slot-scope=\"{ item }\">\r\n              <div class=\"progress-container\">\r\n                <v-progress-linear\r\n                  :value=\"getMortalityPercent(item)\"\r\n                  height=\"18\"\r\n                  color=\"rgb(120, 144, 156)\"\r\n                  rounded\r\n                />\r\n                <div class=\"progress-label\">{{ item.mortality['2024'] }}</div>\r\n              </div>\r\n            </template>\r\n          </v-data-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"chart-card chart-card-third\">\r\n      <div class=\"card-header\">Смертность и рождаемость, чел. на 1 тыс. чел.</div>\r\n      <div class=\"card-content\">\r\n        <div class=\"stats-container\" v-if=\"selectedRegion\">\r\n          <div class=\"stats-row\">\r\n            <div class=\"stats-year\">2023 г.</div>\r\n            <div class=\"stats-year\">2024 г.</div>\r\n          </div>\r\n          <div class=\"stats-row\">\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Рождаемость</span>\r\n              <span class=\"stats-value fertility\">\r\n                <count-up\r\n                  :key=\"`fertility-2023-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.fertility['2023'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.fertility['2023'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n            <div class=\"stats-icon\">\r\n              <v-icon color=\"#4CAF50\" size=\"75\">fas fa-baby-carriage</v-icon>\r\n            </div>\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Рождаемость</span>\r\n              <span class=\"stats-value fertility\">\r\n                <count-up\r\n                  :key=\"`fertility-2024-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.fertility['2024'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.fertility['2024'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"stats-row\">\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Смертность</span>\r\n              <span class=\"stats-value mortality\">\r\n                <count-up\r\n                  :key=\"`mortality-2023-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.mortality['2023'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.mortality['2023'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n            <div class=\"stats-icon\">\r\n              <v-icon color=\"#78909C\" size=\"75\">fas fa-cross</v-icon>\r\n            </div>\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Смертность</span>\r\n              <span class=\"stats-value mortality\">\r\n                <count-up\r\n                  :key=\"`mortality-2024-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.mortality['2024'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.mortality['2024'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"chart-card chart-card-four\">\r\n      <div class=\"card-header\">Смертность, чел. на 1 тыс. чел.</div>\r\n      <div class=\"card-content\">\r\n        <div class=\"road-container\">\r\n          <road-chart height=\"100%\" :data-source=\"roadChartData\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MapComponent from './MapComponent.vue';\r\nimport RoadChart from './RoadChart.vue';\r\nimport CountUp from 'vue-countup-v2';\r\n\r\nexport default {\r\n  name: 'FirstSlide',\r\n  components: {\r\n    MapComponent,\r\n    RoadChart,\r\n    CountUp,\r\n  },\r\n  props: {\r\n    regionItems: Array,\r\n    sortBy: String,\r\n    sortDesc: Boolean,\r\n    headers: Array,\r\n    roadChartData: Object,\r\n  },\r\n  methods: {\r\n    selectedRegion() {\r\n      return this.regionItems.find(\r\n        (region) => String(region.id) === String(this.selectedRegionId || '14')\r\n      ) || null;\r\n    },\r\n    handleRegionSelect(regionId) {\r\n      this.selectedRegionId = regionId;\r\n    },\r\n    handleTooltipShow({ region, event }) {\r\n      const regionName = region.name;\r\n      const fertility2023 = region.fertility['2023'];\r\n      const fertility2024 = region.fertility['2024'];\r\n      const mortality2023 = region.mortality['2023'];\r\n      const mortality2024 = region.mortality['2024'];\r\n\r\n      let fertilityTrend = '';\r\n      let fertilityIconClass = '';\r\n      const fert2023 = parseFloat(fertility2023);\r\n      const fert2024 = parseFloat(fertility2024);\r\n      if (fert2024 < fert2023) {\r\n        fertilityTrend = '<i class=\"fas fa-caret-down\"></i>';\r\n        fertilityIconClass = 'fertility-icon';\r\n      } else {\r\n        fertilityTrend = '<i class=\"fas fa-caret-up\"></i>';\r\n        fertilityIconClass = 'mortality-icon';\r\n      }\r\n\r\n      let mortalityTrend = '';\r\n      let mortalityIconClass = '';\r\n      const mortal2023 = parseFloat(mortality2023);\r\n      const mortal2024 = parseFloat(mortality2024);\r\n      if (mortal2024 < mortal2023) {\r\n        mortalityTrend = '<i class=\"fas fa-caret-down\"></i>';\r\n        mortalityIconClass = 'mortality-icon';\r\n      } else {\r\n        mortalityTrend = '<i class=\"fas fa-caret-up\"></i>';\r\n        mortalityIconClass = 'fertility-icon';\r\n      }\r\n\r\n      const html = `\r\n        <div class=\"tooltip-content\">\r\n          <div class=\"tooltip-title\">${regionName}</div>\r\n          <div class=\"tooltip-section\">\r\n            <span class=\"tooltip-label\">Рождаемость</span><br>\r\n            <span class=\"tooltip-year\">2023г. - ${fertility2023}</span>\r\n            <div class=\"tooltip-year-with-icon\">\r\n              <span class=\"tooltip-year\">2024г. - ${fertility2024}</span>\r\n              <span class=\"tooltip-icon ${fertilityIconClass}\">${fertilityTrend}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"tooltip-section\">\r\n            <span class=\"tooltip-label\">Смертность</span><br>\r\n            <span class=\"tooltip-year\">2023г. - ${mortality2023}</span>\r\n            <div class=\"tooltip-year-with-icon\">\r\n              <span class=\"tooltip-year\">2024г. - ${mortality2024}</span>\r\n              <span class=\"tooltip-icon ${mortalityIconClass}\">${mortalityTrend}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n\r\n      this.tooltipHtml = String(html);\r\n      this.tooltipEvent = {\r\n        position: {\r\n          x: event.clientX,\r\n          y: event.clientY,\r\n        },\r\n      };\r\n    },\r\n    customizePathColors() {\r\n      const styles = {};\r\n      this.regionItems.forEach((region) => {\r\n        const regionId = String(region.id);\r\n        if (region.percentage) {\r\n          const percentage = parseFloat(region.percentage) || 0;\r\n          if (percentage >= 75) {\r\n            styles[regionId] = 'rgb(104, 159, 56)';\r\n          } else if (percentage >= 25) {\r\n            styles[regionId] = 'rgb(51, 105, 30)';\r\n          } else {\r\n            styles[regionId] = 'rgb(124, 179, 66)';\r\n          }\r\n        } else {\r\n          styles[regionId] = 'rgb(189, 189, 189)';\r\n        }\r\n      });\r\n      return styles;\r\n    },\r\n    customizePathTexts() {\r\n      const texts = {};\r\n      this.regionItems.forEach((region) => {\r\n        const regionId = String(region.id);\r\n        texts[regionId] = region.percentage || '';\r\n      });\r\n      return texts;\r\n    },\r\n    getFertilityPercent(item) {\r\n      return (parseFloat(item.fertility['2024']) / 15) * 100;\r\n    },\r\n    getMortalityPercent(item) {\r\n      return (parseFloat(item.mortality['2024']) / 15) * 100;\r\n    },\r\n    getCountUpOptions(value) {\r\n      const numStr = value.toString();\r\n      const decimalIndex = numStr.indexOf('.');\r\n      const decimalPlaces = decimalIndex !== -1 ? numStr.length - decimalIndex - 1 : 0;\r\n      return {\r\n        separator: ' ',\r\n        duration: 2,\r\n        useEasing: true,\r\n        decimalPlaces: decimalPlaces,\r\n        decimal: '.',\r\n      };\r\n    },\r\n    customSort(items, sortBy, sortDesc) {\r\n      if (!sortBy || !sortBy.length) return items;\r\n      const key = sortBy[0];\r\n      const desc = sortDesc[0];\r\n      return items.slice().sort((a, b) => {\r\n        let valA = a[key];\r\n        let valB = b[key];\r\n        if (typeof valA === 'object' && valA !== null) {\r\n          valA = parseFloat(valA['2024']) || 0;\r\n        }\r\n        if (typeof valB === 'object' && valB !== null) {\r\n          valB = parseFloat(valB['2024']) || 0;\r\n        }\r\n        if (typeof valA === 'string' && typeof valB === 'string') {\r\n          valA = valA.toLowerCase();\r\n          valB = valB.toLowerCase();\r\n        }\r\n        if (valA < valB) return desc ? 1 : -1;\r\n        if (valA > valB) return desc ? -1 : 1;\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";;;AAoIA,OAAAA,YAAA;AACA,OAAAC,SAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,YAAA;IACAC,SAAA;IACAC;EACA;EACAG,KAAA;IACAC,WAAA,EAAAC,KAAA;IACAC,MAAA,EAAAC,MAAA;IACAC,QAAA,EAAAC,OAAA;IACAC,OAAA,EAAAL,KAAA;IACAM,aAAA,EAAAC;EACA;EACAC,OAAA;IACAC,eAAA;MACA,YAAAV,WAAA,CAAAW,IAAA,CACAC,MAAA,IAAAT,MAAA,CAAAS,MAAA,CAAAC,EAAA,MAAAV,MAAA,MAAAW,gBAAA,SACA;IACA;IACAC,mBAAAC,QAAA;MACA,KAAAF,gBAAA,GAAAE,QAAA;IACA;IACAC,kBAAA;MAAAL,MAAA;MAAAM;IAAA;MACA,MAAAC,UAAA,GAAAP,MAAA,CAAAf,IAAA;MACA,MAAAuB,aAAA,GAAAR,MAAA,CAAAS,SAAA;MACA,MAAAC,aAAA,GAAAV,MAAA,CAAAS,SAAA;MACA,MAAAE,aAAA,GAAAX,MAAA,CAAAY,SAAA;MACA,MAAAC,aAAA,GAAAb,MAAA,CAAAY,SAAA;MAEA,IAAAE,cAAA;MACA,IAAAC,kBAAA;MACA,MAAAC,QAAA,GAAAC,UAAA,CAAAT,aAAA;MACA,MAAAU,QAAA,GAAAD,UAAA,CAAAP,aAAA;MACA,IAAAQ,QAAA,GAAAF,QAAA;QACAF,cAAA;QACAC,kBAAA;MACA;QACAD,cAAA;QACAC,kBAAA;MACA;MAEA,IAAAI,cAAA;MACA,IAAAC,kBAAA;MACA,MAAAC,UAAA,GAAAJ,UAAA,CAAAN,aAAA;MACA,MAAAW,UAAA,GAAAL,UAAA,CAAAJ,aAAA;MACA,IAAAS,UAAA,GAAAD,UAAA;QACAF,cAAA;QACAC,kBAAA;MACA;QACAD,cAAA;QACAC,kBAAA;MACA;MAEA,MAAAG,IAAA;AACA;AACA,uCAAAhB,UAAA;AACA;AACA;AACA,kDAAAC,aAAA;AACA;AACA,oDAAAE,aAAA;AACA,0CAAAK,kBAAA,KAAAD,cAAA;AACA;AACA;AACA;AACA;AACA,kDAAAH,aAAA;AACA;AACA,oDAAAE,aAAA;AACA,0CAAAO,kBAAA,KAAAD,cAAA;AACA;AACA;AACA;AACA;MAEA,KAAAK,WAAA,GAAAjC,MAAA,CAAAgC,IAAA;MACA,KAAAE,YAAA;QACAC,QAAA;UACAC,CAAA,EAAArB,KAAA,CAAAsB,OAAA;UACAC,CAAA,EAAAvB,KAAA,CAAAwB;QACA;MACA;IACA;IACAC,oBAAA;MACA,MAAAC,MAAA;MACA,KAAA5C,WAAA,CAAA6C,OAAA,CAAAjC,MAAA;QACA,MAAAI,QAAA,GAAAb,MAAA,CAAAS,MAAA,CAAAC,EAAA;QACA,IAAAD,MAAA,CAAAkC,UAAA;UACA,MAAAA,UAAA,GAAAjB,UAAA,CAAAjB,MAAA,CAAAkC,UAAA;UACA,IAAAA,UAAA;YACAF,MAAA,CAAA5B,QAAA;UACA,WAAA8B,UAAA;YACAF,MAAA,CAAA5B,QAAA;UACA;YACA4B,MAAA,CAAA5B,QAAA;UACA;QACA;UACA4B,MAAA,CAAA5B,QAAA;QACA;MACA;MACA,OAAA4B,MAAA;IACA;IACAG,mBAAA;MACA,MAAAC,KAAA;MACA,KAAAhD,WAAA,CAAA6C,OAAA,CAAAjC,MAAA;QACA,MAAAI,QAAA,GAAAb,MAAA,CAAAS,MAAA,CAAAC,EAAA;QACAmC,KAAA,CAAAhC,QAAA,IAAAJ,MAAA,CAAAkC,UAAA;MACA;MACA,OAAAE,KAAA;IACA;IACAC,oBAAAC,IAAA;MACA,OAAArB,UAAA,CAAAqB,IAAA,CAAA7B,SAAA;IACA;IACA8B,oBAAAD,IAAA;MACA,OAAArB,UAAA,CAAAqB,IAAA,CAAA1B,SAAA;IACA;IACA4B,kBAAAC,KAAA;MACA,MAAAC,MAAA,GAAAD,KAAA,CAAAE,QAAA;MACA,MAAAC,YAAA,GAAAF,MAAA,CAAAG,OAAA;MACA,MAAAC,aAAA,GAAAF,YAAA,UAAAF,MAAA,CAAAK,MAAA,GAAAH,YAAA;MACA;QACAI,SAAA;QACAC,QAAA;QACAC,SAAA;QACAJ,aAAA,EAAAA,aAAA;QACAK,OAAA;MACA;IACA;IACAC,WAAAC,KAAA,EAAA/D,MAAA,EAAAE,QAAA;MACA,KAAAF,MAAA,KAAAA,MAAA,CAAAyD,MAAA,SAAAM,KAAA;MACA,MAAAC,GAAA,GAAAhE,MAAA;MACA,MAAAiE,IAAA,GAAA/D,QAAA;MACA,OAAA6D,KAAA,CAAAG,KAAA,GAAAC,IAAA,EAAAC,CAAA,EAAAC,CAAA;QACA,IAAAC,IAAA,GAAAF,CAAA,CAAAJ,GAAA;QACA,IAAAO,IAAA,GAAAF,CAAA,CAAAL,GAAA;QACA,WAAAM,IAAA,iBAAAA,IAAA;UACAA,IAAA,GAAA3C,UAAA,CAAA2C,IAAA;QACA;QACA,WAAAC,IAAA,iBAAAA,IAAA;UACAA,IAAA,GAAA5C,UAAA,CAAA4C,IAAA;QACA;QACA,WAAAD,IAAA,wBAAAC,IAAA;UACAD,IAAA,GAAAA,IAAA,CAAAE,WAAA;UACAD,IAAA,GAAAA,IAAA,CAAAC,WAAA;QACA;QACA,IAAAF,IAAA,GAAAC,IAAA,SAAAN,IAAA;QACA,IAAAK,IAAA,GAAAC,IAAA,SAAAN,IAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}