{"ast":null,"code":"import ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'HorizontalStackBars',\n  components: {\n    ApexChart\n  },\n  props: {\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '100%'\n    },\n    total: {\n      type: Boolean,\n      default: true\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: []\n      })\n    }\n  },\n  data() {\n    return {\n      horizontalTotal: true\n    };\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          type: 'bar',\n          stacked: true,\n          height: '100%',\n          fontFamily: 'Montserrat-Regular',\n          animations: {\n            enabled: true,\n            speed: 800\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          position: 'center',\n          offsetX: -6,\n          style: {\n            fontSize: '11px',\n            fontWeight: 400,\n            colors: ['#ffffff']\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            barHeight: '70%',\n            dataLabels: {\n              total: {\n                enabled: this.total,\n                offsetX: 0,\n                style: {\n                  fontSize: '13px',\n                  fontWeight: 400,\n                  color: '#fff'\n                }\n              }\n            }\n          }\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          show: false\n        },\n        tooltip: {\n          shared: false,\n          intersect: true,\n          custom: ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) => {\n            const category = w.config.xaxis.categories[dataPointIndex];\n            const value = series[seriesIndex][dataPointIndex];\n            const color = w.globals.colors[seriesIndex];\n            return `\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\n                <strong>${category}:</strong> ${value}\n              </div>\n            `;\n          }\n        },\n        xaxis: {\n          categories: this.dataSource.categories,\n          labels: {\n            show: false,\n            style: {\n              colors: '#ffffff',\n              fontSize: '11px'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        yaxis: {\n          labels: {\n            offsetX: 5,\n            style: {\n              colors: '#ffffff'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        legend: {\n          position: 'bottom',\n          offsetY: -10,\n          fontSize: '9px',\n          markers: {\n            width: 10,\n            height: 10,\n            borderRadius: 10,\n            strokeWidth: 0\n          },\n          itemMargin: {\n            horizontal: 5,\n            vertical: 15\n          },\n          formatter: (seriesName, opts) => {\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\n          }\n        },\n        colors: this.dataSource.colors\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","width","type","String","default","height","total","Boolean","dataSource","Object","required","series","categories","colors","data","horizontalTotal","computed","chartOptions","chart","stacked","fontFamily","animations","enabled","speed","toolbar","show","dataLabels","position","offsetX","style","fontSize","fontWeight","plotOptions","bar","horizontal","barHeight","color","grid","stroke","tooltip","shared","intersect","custom","seriesIndex","dataPointIndex","w","category","config","xaxis","value","globals","labels","axisBorder","axisTicks","yaxis","legend","offsetY","markers","borderRadius","strokeWidth","itemMargin","vertical","formatter","seriesName","opts"],"sources":["src/components/charts/HorizontalStackBars.vue"],"sourcesContent":["<template>\r\n  <ApexChart\r\n    type=\"bar\"\r\n    :width=\"width\"\r\n    :height=\"height\"\r\n    :options=\"chartOptions\"\r\n    :series=\"dataSource.series\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport ApexChart from 'vue-apexcharts';\r\n\r\nexport default {\r\n  name: 'HorizontalStackBars',\r\n  components: {\r\n    ApexChart,\r\n  },\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '100%',\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '100%',\r\n    },\r\n    total: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      horizontalTotal: true,\r\n    };\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      return {\r\n        chart: {\r\n          type: 'bar',\r\n          stacked: true,\r\n          height: '100%',\r\n          fontFamily: 'Montserrat-Regular',\r\n          animations: {\r\n            enabled: true,\r\n            speed: 800,\r\n          },\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          position: 'center',\r\n          offsetX: -6,\r\n          style: {\r\n            fontSize: '11px',\r\n            fontWeight: 400,\r\n            colors: ['#ffffff'],\r\n          },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            barHeight: '70%',\r\n            dataLabels: {\r\n              total: {\r\n                enabled: this.total,\r\n                    offsetX: 0,\r\n                    style: {\r\n                      fontSize: '13px',\r\n                      fontWeight: 400,\r\n                      color: '#fff'\r\n                    }\r\n                  }\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          show: false,\r\n        },\r\n        stroke: {\r\n          show: false,\r\n        },\r\n        tooltip: {\r\n          shared: false,\r\n          intersect: true,\r\n          custom: ({ series, seriesIndex, dataPointIndex, w }) => {\r\n            const category = w.config.xaxis.categories[dataPointIndex];\r\n            const value = series[seriesIndex][dataPointIndex];\r\n            const color = w.globals.colors[seriesIndex];\r\n            return `\r\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\r\n                <strong>${category}:</strong> ${value}\r\n              </div>\r\n            `;\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: this.dataSource.categories,\r\n          labels: {\r\n            show: false,\r\n            style: {\r\n              colors: '#ffffff',\r\n              fontSize: '11px',\r\n            },\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n            color: '#4b3f3f',\r\n          },\r\n          axisTicks: {\r\n            show: true,\r\n            color: '#4b3f3f',\r\n          },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            offsetX: 5,\r\n            style: {\r\n              colors: '#ffffff',\r\n            },\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n            color: '#4b3f3f',\r\n          },\r\n          axisTicks: {\r\n            show: true,\r\n            color: '#4b3f3f',\r\n          },\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetY: -10,\r\n          fontSize: '9px',\r\n          markers: {\r\n            width: 10,\r\n            height: 10,\r\n            borderRadius: 10,\r\n            strokeWidth: 0,\r\n          },\r\n          itemMargin: {\r\n            horizontal: 5,\r\n            vertical: 15,\r\n          },\r\n          formatter: (seriesName, opts) => {\r\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\r\n          },\r\n        },\r\n        colors: this.dataSource.colors,\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AAWA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,KAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,OAAA;IACA;IACAI,UAAA;MACAN,IAAA,EAAAO,MAAA;MACAC,QAAA;MACAN,OAAA,EAAAA,CAAA;QACAO,MAAA;QACAC,UAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,KAAA;IACA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA;QACAC,KAAA;UACAhB,IAAA;UACAiB,OAAA;UACAd,MAAA;UACAe,UAAA;UACAC,UAAA;YACAC,OAAA;YACAC,KAAA;UACA;UACAC,OAAA;YACAC,IAAA;UACA;QACA;QACAC,UAAA;UACAJ,OAAA;UACAK,QAAA;UACAC,OAAA;UACAC,KAAA;YACAC,QAAA;YACAC,UAAA;YACAlB,MAAA;UACA;QACA;QACAmB,WAAA;UACAC,GAAA;YACAC,UAAA;YACAC,SAAA;YACAT,UAAA;cACApB,KAAA;gBACAgB,OAAA,OAAAhB,KAAA;gBACAsB,OAAA;gBACAC,KAAA;kBACAC,QAAA;kBACAC,UAAA;kBACAK,KAAA;gBACA;cACA;YACA;UACA;QACA;QACAC,IAAA;UACAZ,IAAA;QACA;QACAa,MAAA;UACAb,IAAA;QACA;QACAc,OAAA;UACAC,MAAA;UACAC,SAAA;UACAC,MAAA,EAAAA,CAAA;YAAA/B,MAAA;YAAAgC,WAAA;YAAAC,cAAA;YAAAC;UAAA;YACA,MAAAC,QAAA,GAAAD,CAAA,CAAAE,MAAA,CAAAC,KAAA,CAAApC,UAAA,CAAAgC,cAAA;YACA,MAAAK,KAAA,GAAAtC,MAAA,CAAAgC,WAAA,EAAAC,cAAA;YACA,MAAAR,KAAA,GAAAS,CAAA,CAAAK,OAAA,CAAArC,MAAA,CAAA8B,WAAA;YACA;AACA,sDAAAP,KAAA;AACA,0BAAAU,QAAA,cAAAG,KAAA;AACA;AACA;UACA;QACA;QACAD,KAAA;UACApC,UAAA,OAAAJ,UAAA,CAAAI,UAAA;UACAuC,MAAA;YACA1B,IAAA;YACAI,KAAA;cACAhB,MAAA;cACAiB,QAAA;YACA;UACA;UACAsB,UAAA;YACA3B,IAAA;YACAW,KAAA;UACA;UACAiB,SAAA;YACA5B,IAAA;YACAW,KAAA;UACA;QACA;QACAkB,KAAA;UACAH,MAAA;YACAvB,OAAA;YACAC,KAAA;cACAhB,MAAA;YACA;UACA;UACAuC,UAAA;YACA3B,IAAA;YACAW,KAAA;UACA;UACAiB,SAAA;YACA5B,IAAA;YACAW,KAAA;UACA;QACA;QACAmB,MAAA;UACA5B,QAAA;UACA6B,OAAA;UACA1B,QAAA;UACA2B,OAAA;YACAxD,KAAA;YACAI,MAAA;YACAqD,YAAA;YACAC,WAAA;UACA;UACAC,UAAA;YACA1B,UAAA;YACA2B,QAAA;UACA;UACAC,SAAA,EAAAA,CAAAC,UAAA,EAAAC,IAAA;YACA,8BAAAA,IAAA,CAAAnB,CAAA,CAAAK,OAAA,CAAArC,MAAA,CAAAmD,IAAA,CAAArB,WAAA,MAAAoB,UAAA;UACA;QACA;QACAlD,MAAA,OAAAL,UAAA,CAAAK;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}