{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport HorizontalStackBars from '../charts/HorizontalStackBars.vue';\nimport PositiveNegativeChart from '../charts/PositiveNegativeChart.vue';\nexport default {\n  name: 'SecondSlide',\n  components: {\n    HorizontalStackBars,\n    PositiveNegativeChart\n  },\n  data() {\n    return {\n      sortBy: 'name',\n      sortDesc: false,\n      selectedChart: 'chart1',\n      localSelectedChart: this.selectedChart,\n      grossChartData: {\n        categories: ['2023', '2022', '2021'],\n        colors: ['#8BC34A', '#FFB74D'],\n        series: [{\n          name: 'Растениеводство',\n          data: [577.6, 909.4, 679.3]\n        }, {\n          name: 'Животноводство',\n          data: [179.2, 263, 219.9]\n        }],\n        customTotals: [['-16.8%', 757.5], ['+12.3%', 1173.6], ['-12.2%', 900]]\n      },\n      agrocultregion: [{\n        id: 4,\n        name: 'Айыртауский',\n        economicData: {\n          percentChange: -8.7,\n          productionVolume: 63.5\n        }\n      }, {\n        id: 5,\n        name: 'Акжарский',\n        economicData: {\n          percentChange: -57.1,\n          productionVolume: 23.9\n        }\n      }, {\n        id: 10,\n        name: 'Аккайынский',\n        economicData: {\n          percentChange: 26.1,\n          productionVolume: 53.6\n        }\n      }, {\n        id: 3,\n        name: 'им. Г.Мусрепова',\n        economicData: {\n          percentChange: 0,\n          productionVolume: 99.0\n        }\n      }, {\n        id: 9,\n        name: 'Есильский',\n        economicData: {\n          percentChange: 19.6,\n          productionVolume: 62.4\n        }\n      }, {\n        id: 7,\n        name: 'Жамбылский',\n        economicData: {\n          percentChange: 2.4,\n          productionVolume: 51.0\n        }\n      }, {\n        id: 1,\n        name: 'Кызылжарский',\n        economicData: {\n          percentChange: 29.4,\n          productionVolume: 84.3\n        }\n      }, {\n        id: 6,\n        name: 'М.Жумабаева',\n        economicData: {\n          percentChange: -14.2,\n          productionVolume: 65.2\n        }\n      }, {\n        id: 12,\n        name: 'Мамлютский',\n        economicData: {\n          percentChange: 17.5,\n          productionVolume: 38.1\n        }\n      }, {\n        id: 2,\n        name: 'Тайыншинский',\n        economicData: {\n          percentChange: 17.5,\n          productionVolume: 38.1\n        }\n      }, {\n        id: 11,\n        name: 'Тимирязевский',\n        economicData: {\n          percentChange: 10.1,\n          productionVolume: 35.0\n        }\n      }, {\n        id: 13,\n        name: 'Уалихановский',\n        economicData: {\n          percentChange: -47.0,\n          productionVolume: 24.1\n        }\n      }, {\n        id: 8,\n        name: 'Шал акына',\n        economicData: {\n          percentChange: -18.5,\n          productionVolume: 38.8\n        }\n      }, {\n        id: '1-city',\n        name: 'г. Петропавловск',\n        economicData: {\n          percentChange: 11.4,\n          productionVolume: 21.4\n        }\n      }]\n    };\n  },\n  computed: {\n    barSixChartData() {\n      const key = this.sortBy;\n      const desc = this.sortDesc;\n      const regions = this.agrocultregion.slice().sort((a, b) => {\n        let valA = a[key];\n        let valB = b[key];\n        if (typeof valA === 'object' && valA !== null) {\n          valA = parseFloat(valA['2024']) || 0;\n        }\n        if (typeof valB === 'object' && valB !== null) {\n          valB = parseFloat(valB['2024']) || 0;\n        }\n        if (typeof valA === 'string' && typeof valB === 'string') {\n          valA = valA.toLowerCase();\n          valB = valB.toLowerCase();\n        }\n        if (valA < valB) return desc ? 1 : -1;\n        if (valA > valB) return desc ? -1 : 1;\n        return 0;\n      });\n      return {\n        categories: regions.map(item => item.name),\n        series: [{\n          data: this.selectedChart === 'chart1' ? regions.map(item => item.economicData.percentChange) : regions.map(item => item.economicData.productionVolume)\n        }]\n      };\n    }\n  }\n};","map":{"version":3,"names":["HorizontalStackBars","PositiveNegativeChart","name","components","data","sortBy","sortDesc","selectedChart","localSelectedChart","grossChartData","categories","colors","series","customTotals","agrocultregion","id","economicData","percentChange","productionVolume","computed","barSixChartData","key","desc","regions","slice","sort","a","b","valA","valB","parseFloat","toLowerCase","map","item"],"sources":["src/components/Slides/SecondSlide.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container second-page\">\r\n    <div class=\"chart-card chart-card-five\">\r\n      <div class=\"card-header\">Валовый выпуск, млрд. тенге</div>\r\n      <div class=\"card-content\">\r\n        <div class=\"road-container\" ref=\"chartContainer\">\r\n          <horizontal-stack-bars height=\"100%\" :data-source=\"grossChartData\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"chart-card chart-card-six\">\r\n      <div class=\"card-header\">Сельское хозяйство по регионам</div>\r\n      <div class=\"chart-switcher\">\r\n        <label>\r\n          <input type=\"radio\" v-model=\"localSelectedChart\" value=\"chart1\" /> в % к предыдущему году\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" v-model=\"localSelectedChart\" value=\"chart2\" /> млрд. тг\r\n        </label>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"road-container\">\r\n          <positive-negative-chart height=\"100%\" :data-source=\"barSixChartData\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HorizontalStackBars from '../charts/HorizontalStackBars.vue';\r\nimport PositiveNegativeChart from '../charts/PositiveNegativeChart.vue';\r\n\r\nexport default {\r\n  name: 'SecondSlide',\r\n  components: {\r\n    HorizontalStackBars,\r\n    PositiveNegativeChart,\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      sortBy: 'name',\r\n      sortDesc: false,\r\n      selectedChart: 'chart1',\r\n      localSelectedChart: this.selectedChart,\r\n      grossChartData: {\r\n        categories: ['2023', '2022', '2021'],\r\n        colors: ['#8BC34A', '#FFB74D'],\r\n        series: [\r\n          {\r\n            name: 'Растениеводство',\r\n            data: [577.6, 909.4, 679.3],\r\n          },\r\n          {\r\n            name: 'Животноводство',\r\n            data: [179.2, 263, 219.9],\r\n          },\r\n        ],\r\n        customTotals: [['-16.8%', 757.5], ['+12.3%', 1173.6], ['-12.2%', 900]],\r\n      },\r\n      agrocultregion: [\r\n        {\r\n        id: 4,\r\n        name: 'Айыртауский',\r\n        economicData: { percentChange: -8.7, productionVolume: 63.5 },\r\n        },\r\n      {\r\n        id: 5,\r\n        name: 'Акжарский',\r\n        economicData: { percentChange: -57.1, productionVolume: 23.9 },\r\n      },\r\n      {\r\n        id: 10,\r\n        name: 'Аккайынский',\r\n        economicData: { percentChange: 26.1, productionVolume: 53.6 },\r\n      },\r\n      {\r\n         id: 3,\r\n         name: 'им. Г.Мусрепова',\r\n         economicData: { percentChange: 0, productionVolume: 99.0 },\r\n      },\r\n      {\r\n        id: 9,\r\n        name: 'Есильский',\r\n        economicData: { percentChange: 19.6, productionVolume: 62.4 },\r\n      },\r\n      {\r\n        id: 7,\r\n        name: 'Жамбылский',\r\n        economicData: { percentChange: 2.4, productionVolume: 51.0 },\r\n      },\r\n      {\r\n        id: 1,\r\n        name: 'Кызылжарский',\r\n        economicData: { percentChange: 29.4, productionVolume: 84.3 },\r\n      },\r\n      {\r\n        id: 6,\r\n        name: 'М.Жумабаева',\r\n        economicData: { percentChange: -14.2, productionVolume: 65.2 },\r\n      },\r\n      {\r\n        id: 12,\r\n        name: 'Мамлютский' ,\r\n        economicData: { percentChange: 17.5, productionVolume: 38.1 },\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Тайыншинский',\r\n        economicData: { percentChange: 17.5, productionVolume: 38.1 },\r\n      },\r\n      {\r\n        id: 11,\r\n        name: 'Тимирязевский',\r\n        economicData: { percentChange: 10.1, productionVolume: 35.0 },\r\n      },\r\n      {\r\n        id: 13,\r\n        name: 'Уалихановский',\r\n        economicData: { percentChange: -47.0, productionVolume: 24.1 },\r\n      },\r\n      {\r\n        id: 8,\r\n        name: 'Шал акына',\r\n        economicData: { percentChange: -18.5, productionVolume: 38.8 },\r\n      },\r\n      {\r\n        id: '1-city',\r\n        name: 'г. Петропавловск',\r\n        economicData: { percentChange: 11.4, productionVolume: 21.4 },\r\n      },  \r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    barSixChartData() {\r\n      const key = this.sortBy;\r\n      const desc = this.sortDesc;\r\n      const regions = this.agrocultregion\r\n        .slice()\r\n        .sort((a, b) => {\r\n          let valA = a[key];\r\n          let valB = b[key];\r\n          if (typeof valA === 'object' && valA !== null) {\r\n            valA = parseFloat(valA['2024']) || 0;\r\n          }\r\n          if (typeof valB === 'object' && valB !== null) {\r\n            valB = parseFloat(valB['2024']) || 0;\r\n          }\r\n          if (typeof valA === 'string' && typeof valB === 'string') {\r\n            valA = valA.toLowerCase();\r\n            valB = valB.toLowerCase();\r\n          }\r\n          if (valA < valB) return desc ? 1 : -1;\r\n          if (valA > valB) return desc ? -1 : 1;\r\n          return 0;\r\n        });\r\n      return {\r\n        categories: regions.map(item => item.name),\r\n        series: [{\r\n          data: this.selectedChart === 'chart1'\r\n            ? regions.map(item => item.economicData.percentChange)\r\n            : regions.map(item => item.economicData.productionVolume),\r\n        }],\r\n      };\r\n    },\r\n  },\r\n  \r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}