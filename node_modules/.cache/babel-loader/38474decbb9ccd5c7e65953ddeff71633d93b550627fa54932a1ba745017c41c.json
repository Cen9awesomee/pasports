{"ast":null,"code":"import ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'ValChart',\n  components: {\n    ApexChart\n  },\n  props: {\n    width: {\n      type: [Number, String],\n      default: '95%'\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: [],\n        percentChanges: []\n      })\n    },\n    data() {\n      return {\n        horizontalTotal: true\n      };\n    }\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          type: 'bar',\n          stacked: true,\n          height: '100%',\n          animations: {\n            enabled: true,\n            speed: 800\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            barHeight: '70%',\n            dataLabels: {\n              enabledOnSeries: [0, 1],\n              total: {\n                enabled: this.horizontalTotal,\n                offsetX: 7,\n                offsetY: 2,\n                style: {\n                  fontSize: '14px',\n                  fontWeight: 'normal',\n                  color: '#fff'\n                },\n                formatter: function (val, opts) {\n                  const index = opts.w.config.series[0].data.length - opts.dataPointIndex - 1;\n                  const [percent, total] = opts.w.config.customTotals[index] || ['0%', 0];\n                  const color = percent.startsWith('-') ? '#FF4D4F' : '#52C41A';\n                  opts.w.config.dataLabels.total.style.colors = [color];\n                  const formattedTotal = Number(total).toFixed(1);\n                  return [percent, formattedTotal];\n                }\n              }\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          offsetX: -6,\n          style: {\n            fontSize: '11px',\n            fontWeight: 400,\n            fontFamily: 'Montserrat-Regular',\n            colors: ['#ffffff']\n          },\n          formatter: val => val.toFixed(1)\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          show: false\n        },\n        tooltip: {\n          shared: false,\n          intersect: true,\n          custom: ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) => {\n            const category = w.config.xaxis.categories[dataPointIndex];\n            const value = series[seriesIndex][dataPointIndex];\n            const color = w.globals.colors[seriesIndex];\n            return `\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\n                <strong>${category}:</strong> ${value}\n              </div>\n            `;\n          }\n        },\n        xaxis: {\n          categories: this.dataSource.categories,\n          labels: {\n            style: {\n              colors: '#ffffff',\n              fontSize: '11px'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        yaxis: {\n          labels: {\n            offsetX: 5,\n            style: {\n              colors: '#ffffff'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        legend: {\n          position: 'bottom',\n          offsetY: -10,\n          fontSize: '9px',\n          fontFamily: 'Montserrat-Regular, sans-serif',\n          markers: {\n            width: 10,\n            height: 10,\n            borderRadius: 10,\n            strokeWidth: 0\n          },\n          itemMargin: {\n            horizontal: 5,\n            vertical: 15\n          },\n          formatter: (seriesName, opts) => {\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\n          }\n        },\n        colors: this.dataSource.colors,\n        responsive: [{\n          breakpoint: 1000,\n          options: {\n            plotOptions: {\n              bar: {\n                horizontal: true\n              }\n            }\n          }\n        }]\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","width","type","Number","String","default","dataSource","Object","required","series","categories","colors","percentChanges","data","horizontalTotal","computed","chartOptions","chart","stacked","height","animations","enabled","speed","toolbar","show","plotOptions","bar","horizontal","barHeight","dataLabels","enabledOnSeries","total","offsetX","offsetY","style","fontSize","fontWeight","color","formatter","val","opts","index","w","config","length","dataPointIndex","percent","customTotals","startsWith","formattedTotal","toFixed","fontFamily","grid","stroke","tooltip","shared","intersect","custom","seriesIndex","category","xaxis","value","globals","labels","axisBorder","axisTicks","yaxis","legend","position","markers","borderRadius","strokeWidth","itemMargin","vertical","seriesName","responsive","breakpoint","options"],"sources":["src/components/ValChart.vue"],"sourcesContent":["<template>\r\n    <ApexChart\r\n      type=\"bar\"\r\n      height=\"100%\"\r\n      :width=\"width\"\r\n      :options=\"chartOptions\"\r\n      :series=\"dataSource.series\"\r\n    />\r\n</template>\r\n\r\n<script>\r\nimport ApexChart from 'vue-apexcharts';\r\n\r\nexport default {\r\n  name: 'ValChart',\r\n  components: { ApexChart },\r\n  props: {\r\n    width: {\r\n      type: [Number, String],\r\n      default: '95%',\r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n        percentChanges: [],\r\n      }),\r\n    },\r\n    data() {\r\n    return {\r\n      horizontalTotal: true, \r\n    };\r\n  },\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      return {\r\n        chart: {\r\n          type: 'bar',\r\n          stacked: true,\r\n          height: '100%',\r\n          animations: {\r\n            enabled: true,\r\n            speed: 800,\r\n          },\r\n          toolbar: { show: false },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            barHeight: '70%',\r\n            dataLabels: {\r\n              enabledOnSeries: [0, 1],\r\n              total: {\r\n            enabled: this.horizontalTotal,\r\n            offsetX: 7,\r\n            offsetY: 2,\r\n            style: {\r\n              fontSize: '14px',\r\n              fontWeight: 'normal',\r\n              color: '#fff'\r\n            },\r\n            formatter: function (val, opts) {\r\n        const index = opts.w.config.series[0].data.length - opts.dataPointIndex - 1;\r\n        const [percent, total] = opts.w.config.customTotals[index] || ['0%', 0];\r\n        const color = percent.startsWith('-') ? '#FF4D4F' : '#52C41A';\r\n        opts.w.config.dataLabels.total.style.colors = [color];\r\n        const formattedTotal = Number(total).toFixed(1);\r\n        return [percent, formattedTotal];\r\n          }\r\n        },\r\n              \r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          offsetX: -6,\r\n          style: {\r\n            fontSize: '11px',\r\n            fontWeight: 400,\r\n            fontFamily: 'Montserrat-Regular',\r\n            colors: ['#ffffff'],\r\n          },\r\n          formatter: (val) => val.toFixed(1),\r\n          \r\n      },\r\n        grid: { show: false },\r\n        stroke: { show: false },\r\n        tooltip: {\r\n          shared: false,\r\n          intersect: true,\r\n          custom: ({ series, seriesIndex, dataPointIndex, w }) => {\r\n            const category = w.config.xaxis.categories[dataPointIndex];\r\n            const value = series[seriesIndex][dataPointIndex];\r\n            const color = w.globals.colors[seriesIndex];\r\n            return `\r\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\r\n                <strong>${category}:</strong> ${value}\r\n              </div>\r\n            `;\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: this.dataSource.categories,\r\n          labels: {\r\n            style: {\r\n              colors: '#ffffff',\r\n              fontSize: '11px',\r\n            },\r\n          },\r\n          axisBorder: { show: true, color: '#4b3f3f' },\r\n          axisTicks: { show: true, color: '#4b3f3f' },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            offsetX: 5,\r\n            style: { colors: '#ffffff' },\r\n          },\r\n          axisBorder: { show: true, color: '#4b3f3f' },\r\n          axisTicks: { show: true, color: '#4b3f3f' },\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetY: -10,\r\n          fontSize: '9px',\r\n          fontFamily: 'Montserrat-Regular, sans-serif',\r\n          markers: {\r\n            width: 10,\r\n            height: 10,\r\n            borderRadius: 10,\r\n            strokeWidth: 0,\r\n          },\r\n          itemMargin: {\r\n            horizontal: 5,\r\n            vertical: 15,\r\n          },\r\n          formatter: (seriesName, opts) => {\r\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\r\n          },\r\n        },\r\n        colors: this.dataSource.colors,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              plotOptions: {\r\n                bar: { horizontal: true },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}