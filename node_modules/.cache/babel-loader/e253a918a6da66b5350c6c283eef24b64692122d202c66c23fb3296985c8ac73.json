{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport MapComponent from './Charts/MapComponent.vue';\nimport RoadChart from './Charts/RoadChart.vue';\nimport CountUp from 'vue-countup-v2';\nexport default {\n  name: 'FirstSlide',\n  components: {\n    MapComponent,\n    RoadChart,\n    CountUp\n  },\n  props: {\n    regionItems: Array,\n    selectedRegionId: [String, Number],\n    tooltipHtml: String,\n    tooltipEvent: Object,\n    sortBy: String,\n    sortDesc: Boolean,\n    headers: Array,\n    roadChartData: Object,\n    selectedRegion: Object\n  },\n  methods: {\n    handleRegionSelect(regionId) {\n      this.$emit('region-selected', regionId);\n    },\n    handleTooltipShow({\n      region,\n      event\n    }) {\n      this.$emit('tooltip-show', {\n        region,\n        event\n      });\n    },\n    customizePathColors() {\n      const styles = {};\n      this.regionItems.forEach(region => {\n        const regionId = String(region.id);\n        if (region.percentage) {\n          const percentage = parseFloat(region.percentage) || 0;\n          if (percentage >= 75) {\n            styles[regionId] = 'rgb(104, 159, 56)';\n          } else if (percentage >= 25) {\n            styles[regionId] = 'rgb(51, 105, 30)';\n          } else {\n            styles[regionId] = 'rgb(124, 179, 66)';\n          }\n        } else {\n          styles[regionId] = 'rgb(189, 189, 189)';\n        }\n      });\n      return styles;\n    },\n    customizePathTexts() {\n      const texts = {};\n      this.regionItems.forEach(region => {\n        const regionId = String(region.id);\n        texts[regionId] = region.percentage || '';\n      });\n      return texts;\n    },\n    getFertilityPercent(item) {\n      return parseFloat(item.fertility['2024']) / 15 * 100;\n    },\n    getMortalityPercent(item) {\n      return parseFloat(item.mortality['2024']) / 15 * 100;\n    },\n    getCountUpOptions(value) {\n      const numStr = value.toString();\n      const decimalIndex = numStr.indexOf('.');\n      const decimalPlaces = decimalIndex !== -1 ? numStr.length - decimalIndex - 1 : 0;\n      return {\n        separator: ' ',\n        duration: 2,\n        useEasing: true,\n        decimalPlaces: decimalPlaces,\n        decimal: '.'\n      };\n    },\n    customSort(items, sortBy, sortDesc) {\n      if (!sortBy || !sortBy.length) return items;\n      const key = sortBy[0];\n      const desc = sortDesc[0];\n      return items.slice().sort((a, b) => {\n        let valA = a[key];\n        let valB = b[key];\n        if (typeof valA === 'object' && valA !== null) {\n          valA = parseFloat(valA['2024']) || 0;\n        }\n        if (typeof valB === 'object' && valB !== null) {\n          valB = parseFloat(valB['2024']) || 0;\n        }\n        if (typeof valA === 'string' && typeof valB === 'string') {\n          valA = valA.toLowerCase();\n          valB = valB.toLowerCase();\n        }\n        if (valA < valB) return desc ? 1 : -1;\n        if (valA > valB) return desc ? -1 : 1;\n        return 0;\n      });\n    }\n  }\n};","map":{"version":3,"names":["MapComponent","RoadChart","CountUp","name","components","props","regionItems","Array","selectedRegionId","String","Number","tooltipHtml","tooltipEvent","Object","sortBy","sortDesc","Boolean","headers","roadChartData","selectedRegion","methods","handleRegionSelect","regionId","$emit","handleTooltipShow","region","event","customizePathColors","styles","forEach","id","percentage","parseFloat","customizePathTexts","texts","getFertilityPercent","item","fertility","getMortalityPercent","mortality","getCountUpOptions","value","numStr","toString","decimalIndex","indexOf","decimalPlaces","length","separator","duration","useEasing","decimal","customSort","items","key","desc","slice","sort","a","b","valA","valB","toLowerCase"],"sources":["src/components/Slides/FirstSlide.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container first-page\">\r\n    <div class=\"chart-card chart-card-first\">\r\n      <div class=\"card-header\">Административно-территориальное деление области</div>\r\n      <div class=\"card-content\">\r\n        <map-component\r\n          :region-items=\"regionItems\"\r\n          :path-data-customization-method=\"customizePathColors\"\r\n          :text-data-customization-method=\"customizePathTexts\"\r\n          :zoom-on-select=\"false\"\r\n          :selected-region-id=\"selectedRegionId\"\r\n          :tooltip-html-external=\"tooltipHtml\"\r\n          :tooltip-event=\"tooltipEvent\"\r\n          @region-selected=\"handleRegionSelect\"\r\n          @tooltip-show=\"handleTooltipShow\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"chart-card chart-card-second\">\r\n      <div class=\"card-header\">Общий уровень смертности и рождаемости, чел. на 1 тыс. чел.</div>\r\n      <div class=\"card-content\">\r\n        <div class=\"table-scroll-container\">\r\n          <v-data-table\r\n            :headers=\"headers\"\r\n            :items=\"regionItems\"\r\n            :custom-sort=\"customSort\"\r\n            :sort-by=\"sortBy\"\r\n            :sort-desc=\"sortDesc\"\r\n            height=\"calc(20vh - 150px)\"\r\n            class=\"custom-table elevation-1\"\r\n            disable-pagination\r\n            hide-default-footer\r\n          >\r\n            <template slot=\"item.fertility\" slot-scope=\"{ item }\">\r\n              <div class=\"progress-container\">\r\n                <v-progress-linear\r\n                  :value=\"getFertilityPercent(item)\"\r\n                  height=\"18\"\r\n                  color=\"rgb(76, 175, 80)\"\r\n                  rounded\r\n                />\r\n                <div class=\"progress-label\">{{ item.fertility['2024'] }}</div>\r\n              </div>\r\n            </template>\r\n            <template slot=\"item.mortality\" slot-scope=\"{ item }\">\r\n              <div class=\"progress-container\">\r\n                <v-progress-linear\r\n                  :value=\"getMortalityPercent(item)\"\r\n                  height=\"18\"\r\n                  color=\"rgb(120, 144, 156)\"\r\n                  rounded\r\n                />\r\n                <div class=\"progress-label\">{{ item.mortality['2024'] }}</div>\r\n              </div>\r\n            </template>\r\n          </v-data-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"chart-card chart-card-third\">\r\n      <div class=\"card-header\">Смертность и рождаемость, чел. на 1 тыс. чел.</div>\r\n      <div class=\"card-content\">\r\n        <div class=\"stats-container\" v-if=\"selectedRegion\">\r\n          <div class=\"stats-row\">\r\n            <div class=\"stats-year\">2023 г.</div>\r\n            <div class=\"stats-year\">2024 г.</div>\r\n          </div>\r\n          <div class=\"stats-row\">\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Рождаемость</span>\r\n              <span class=\"stats-value fertility\">\r\n                <count-up\r\n                  :key=\"`fertility-2023-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.fertility['2023'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.fertility['2023'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n            <div class=\"stats-icon\">\r\n              <v-icon color=\"#4CAF50\" size=\"75\">fas fa-baby-carriage</v-icon>\r\n            </div>\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Рождаемость</span>\r\n              <span class=\"stats-value fertility\">\r\n                <count-up\r\n                  :key=\"`fertility-2024-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.fertility['2024'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.fertility['2024'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"stats-row\">\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Смертность</span>\r\n              <span class=\"stats-value mortality\">\r\n                <count-up\r\n                  :key=\"`mortality-2023-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.mortality['2023'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.mortality['2023'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n            <div class=\"stats-icon\">\r\n              <v-icon color=\"#78909C\" size=\"75\">fas fa-cross</v-icon>\r\n            </div>\r\n            <div class=\"stats-item\">\r\n              <span class=\"stats-label\">Смертность</span>\r\n              <span class=\"stats-value mortality\">\r\n                <count-up\r\n                  :key=\"`mortality-2024-${selectedRegion.id}`\"\r\n                  :end-val=\"parseFloat(selectedRegion.mortality['2024'])\"\r\n                  :options=\"getCountUpOptions(selectedRegion.mortality['2024'])\"\r\n                ></count-up>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"chart-card chart-card-four\">\r\n      <div class=\"card-header\">Смертность, чел. на 1 тыс. чел.</div>\r\n      <div class=\"card-content\">\r\n        <div class=\"road-container\">\r\n          <road-chart height=\"100%\" :data-source=\"roadChartData\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MapComponent from './Charts/MapComponent.vue';\r\nimport RoadChart from './Charts/RoadChart.vue';\r\nimport CountUp from 'vue-countup-v2';\r\n\r\nexport default {\r\n  name: 'FirstSlide',\r\n  components: {\r\n    MapComponent,\r\n    RoadChart,\r\n    CountUp,\r\n  },\r\n  props: {\r\n    regionItems: Array,\r\n    selectedRegionId: [String, Number],\r\n    tooltipHtml: String,\r\n    tooltipEvent: Object,\r\n    sortBy: String,\r\n    sortDesc: Boolean,\r\n    headers: Array,\r\n    roadChartData: Object,\r\n    selectedRegion: Object,\r\n  },\r\n  methods: {\r\n    handleRegionSelect(regionId) {\r\n      this.$emit('region-selected', regionId);\r\n    },\r\n    handleTooltipShow({ region, event }) {\r\n      this.$emit('tooltip-show', { region, event });\r\n    },\r\n    customizePathColors() {\r\n      const styles = {};\r\n      this.regionItems.forEach((region) => {\r\n        const regionId = String(region.id);\r\n        if (region.percentage) {\r\n          const percentage = parseFloat(region.percentage) || 0;\r\n          if (percentage >= 75) {\r\n            styles[regionId] = 'rgb(104, 159, 56)';\r\n          } else if (percentage >= 25) {\r\n            styles[regionId] = 'rgb(51, 105, 30)';\r\n          } else {\r\n            styles[regionId] = 'rgb(124, 179, 66)';\r\n          }\r\n        } else {\r\n          styles[regionId] = 'rgb(189, 189, 189)';\r\n        }\r\n      });\r\n      return styles;\r\n    },\r\n    customizePathTexts() {\r\n      const texts = {};\r\n      this.regionItems.forEach((region) => {\r\n        const regionId = String(region.id);\r\n        texts[regionId] = region.percentage || '';\r\n      });\r\n      return texts;\r\n    },\r\n    getFertilityPercent(item) {\r\n      return (parseFloat(item.fertility['2024']) / 15) * 100;\r\n    },\r\n    getMortalityPercent(item) {\r\n      return (parseFloat(item.mortality['2024']) / 15) * 100;\r\n    },\r\n    getCountUpOptions(value) {\r\n      const numStr = value.toString();\r\n      const decimalIndex = numStr.indexOf('.');\r\n      const decimalPlaces = decimalIndex !== -1 ? numStr.length - decimalIndex - 1 : 0;\r\n      return {\r\n        separator: ' ',\r\n        duration: 2,\r\n        useEasing: true,\r\n        decimalPlaces: decimalPlaces,\r\n        decimal: '.',\r\n      };\r\n    },\r\n    customSort(items, sortBy, sortDesc) {\r\n      if (!sortBy || !sortBy.length) return items;\r\n      const key = sortBy[0];\r\n      const desc = sortDesc[0];\r\n      return items.slice().sort((a, b) => {\r\n        let valA = a[key];\r\n        let valB = b[key];\r\n        if (typeof valA === 'object' && valA !== null) {\r\n          valA = parseFloat(valA['2024']) || 0;\r\n        }\r\n        if (typeof valB === 'object' && valB !== null) {\r\n          valB = parseFloat(valB['2024']) || 0;\r\n        }\r\n        if (typeof valA === 'string' && typeof valB === 'string') {\r\n          valA = valA.toLowerCase();\r\n          valB = valB.toLowerCase();\r\n        }\r\n        if (valA < valB) return desc ? 1 : -1;\r\n        if (valA > valB) return desc ? -1 : 1;\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";;AAoIA,OAAAA,YAAA;AACA,OAAAC,SAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,YAAA;IACAC,SAAA;IACAC;EACA;EACAG,KAAA;IACAC,WAAA,EAAAC,KAAA;IACAC,gBAAA,GAAAC,MAAA,EAAAC,MAAA;IACAC,WAAA,EAAAF,MAAA;IACAG,YAAA,EAAAC,MAAA;IACAC,MAAA,EAAAL,MAAA;IACAM,QAAA,EAAAC,OAAA;IACAC,OAAA,EAAAV,KAAA;IACAW,aAAA,EAAAL,MAAA;IACAM,cAAA,EAAAN;EACA;EACAO,OAAA;IACAC,mBAAAC,QAAA;MACA,KAAAC,KAAA,oBAAAD,QAAA;IACA;IACAE,kBAAA;MAAAC,MAAA;MAAAC;IAAA;MACA,KAAAH,KAAA;QAAAE,MAAA;QAAAC;MAAA;IACA;IACAC,oBAAA;MACA,MAAAC,MAAA;MACA,KAAAtB,WAAA,CAAAuB,OAAA,CAAAJ,MAAA;QACA,MAAAH,QAAA,GAAAb,MAAA,CAAAgB,MAAA,CAAAK,EAAA;QACA,IAAAL,MAAA,CAAAM,UAAA;UACA,MAAAA,UAAA,GAAAC,UAAA,CAAAP,MAAA,CAAAM,UAAA;UACA,IAAAA,UAAA;YACAH,MAAA,CAAAN,QAAA;UACA,WAAAS,UAAA;YACAH,MAAA,CAAAN,QAAA;UACA;YACAM,MAAA,CAAAN,QAAA;UACA;QACA;UACAM,MAAA,CAAAN,QAAA;QACA;MACA;MACA,OAAAM,MAAA;IACA;IACAK,mBAAA;MACA,MAAAC,KAAA;MACA,KAAA5B,WAAA,CAAAuB,OAAA,CAAAJ,MAAA;QACA,MAAAH,QAAA,GAAAb,MAAA,CAAAgB,MAAA,CAAAK,EAAA;QACAI,KAAA,CAAAZ,QAAA,IAAAG,MAAA,CAAAM,UAAA;MACA;MACA,OAAAG,KAAA;IACA;IACAC,oBAAAC,IAAA;MACA,OAAAJ,UAAA,CAAAI,IAAA,CAAAC,SAAA;IACA;IACAC,oBAAAF,IAAA;MACA,OAAAJ,UAAA,CAAAI,IAAA,CAAAG,SAAA;IACA;IACAC,kBAAAC,KAAA;MACA,MAAAC,MAAA,GAAAD,KAAA,CAAAE,QAAA;MACA,MAAAC,YAAA,GAAAF,MAAA,CAAAG,OAAA;MACA,MAAAC,aAAA,GAAAF,YAAA,UAAAF,MAAA,CAAAK,MAAA,GAAAH,YAAA;MACA;QACAI,SAAA;QACAC,QAAA;QACAC,SAAA;QACAJ,aAAA,EAAAA,aAAA;QACAK,OAAA;MACA;IACA;IACAC,WAAAC,KAAA,EAAAvC,MAAA,EAAAC,QAAA;MACA,KAAAD,MAAA,KAAAA,MAAA,CAAAiC,MAAA,SAAAM,KAAA;MACA,MAAAC,GAAA,GAAAxC,MAAA;MACA,MAAAyC,IAAA,GAAAxC,QAAA;MACA,OAAAsC,KAAA,CAAAG,KAAA,GAAAC,IAAA,EAAAC,CAAA,EAAAC,CAAA;QACA,IAAAC,IAAA,GAAAF,CAAA,CAAAJ,GAAA;QACA,IAAAO,IAAA,GAAAF,CAAA,CAAAL,GAAA;QACA,WAAAM,IAAA,iBAAAA,IAAA;UACAA,IAAA,GAAA5B,UAAA,CAAA4B,IAAA;QACA;QACA,WAAAC,IAAA,iBAAAA,IAAA;UACAA,IAAA,GAAA7B,UAAA,CAAA6B,IAAA;QACA;QACA,WAAAD,IAAA,wBAAAC,IAAA;UACAD,IAAA,GAAAA,IAAA,CAAAE,WAAA;UACAD,IAAA,GAAAA,IAAA,CAAAC,WAAA;QACA;QACA,IAAAF,IAAA,GAAAC,IAAA,SAAAN,IAAA;QACA,IAAAK,IAAA,GAAAC,IAAA,SAAAN,IAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}