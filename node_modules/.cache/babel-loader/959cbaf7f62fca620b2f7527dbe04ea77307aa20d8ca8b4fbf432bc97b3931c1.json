{"ast":null,"code":"import ApexChart from 'vue-apexcharts';\nexport default {\n  name: 'ValChart',\n  components: {\n    ApexChart\n  },\n  props: {\n    width: {\n      type: [Number, String],\n      default: '95%'\n    },\n    dataSource: {\n      type: Object,\n      required: true,\n      default: () => ({\n        series: [],\n        categories: [],\n        colors: [],\n        customTotals: []\n      })\n    }\n  },\n  data() {\n    return {\n      horizontalTotal: true\n    };\n  },\n  computed: {\n    chartOptions() {\n      return {\n        chart: {\n          type: 'bar',\n          stacked: true,\n          height: '100%',\n          animations: {\n            enabled: true,\n            speed: 800\n          },\n          toolbar: {\n            show: false\n          },\n          events: {\n            mounted: () => {\n              console.log('Chart mounted, customTotals:', this.dataSource.customTotals);\n            },\n            dataPointSelection: (event, chartContext, config) => {\n              console.log('Data point selected:', config);\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [0, 1],\n          offsetX: 10,\n          offsetY: 0,\n          style: {\n            fontSize: '11px',\n            fontWeight: 400,\n            fontFamily: 'Montserrat-Regular',\n            colors: ['#ffffff']\n          },\n          formatter: (val, opts) => {\n            console.log('DataLabels formatter called, value:', val, 'seriesIndex:', opts.seriesIndex, 'dataPointIndex:', opts.dataPointIndex);\n            return val.toFixed(1);\n          },\n          total: {\n            enabled: this.horizontalTotal,\n            offsetX: 50,\n            // Увеличиваем смещение для горизонтальной диаграммы\n            offsetY: 0,\n            style: {\n              fontSize: '14px',\n              fontWeight: 'normal',\n              fontFamily: 'Montserrat-Regular'\n            },\n            formatter: (val, opts) => {\n              const index = opts.dataPointIndex;\n              console.log(`Total formatter called, index: ${index}, dataPointIndex: ${opts.dataPointIndex}, val: ${val}`);\n              console.log('CustomTotals:', opts.w.config.customTotals);\n              const customTotals = opts.w.config.customTotals || [];\n              const [percent, total] = customTotals[index] || ['0%', 0];\n              console.log(`Category: ${opts.w.config.xaxis.categories[index]}, Percent: ${percent}, Total: ${total}`);\n              const color = percent.startsWith('-') ? '#FF4D4F' : '#52C41A';\n              opts.w.config.dataLabels.total.style.colors = [color];\n              const formattedTotal = Number(total).toFixed(1);\n              // Возвращаем строку вместо массива\n              return `${percent}\\n${formattedTotal}`;\n            }\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            barHeight: '70%'\n          }\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          show: false\n        },\n        tooltip: {\n          shared: false,\n          intersect: true,\n          custom: ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) => {\n            const category = w.config.xaxis.categories[dataPointIndex];\n            const value = series[seriesIndex][dataPointIndex];\n            const color = w.globals.colors[seriesIndex];\n            return `\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\n                <strong>${category}:</strong> ${value}\n              </div>\n            `;\n          }\n        },\n        xaxis: {\n          categories: this.dataSource.categories,\n          labels: {\n            style: {\n              colors: '#ffffff',\n              fontSize: '11px'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        yaxis: {\n          labels: {\n            offsetX: 5,\n            style: {\n              colors: '#ffffff'\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: '#4b3f3f'\n          },\n          axisTicks: {\n            show: true,\n            color: '#4b3f3f'\n          }\n        },\n        legend: {\n          position: 'bottom',\n          offsetY: -10,\n          fontSize: '9px',\n          fontFamily: 'Montserrat-Regular, sans-serif',\n          markers: {\n            width: 10,\n            height: 10,\n            borderRadius: 10,\n            strokeWidth: 0\n          },\n          itemMargin: {\n            horizontal: 5,\n            vertical: 15\n          },\n          formatter: (seriesName, opts) => {\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\n          }\n        },\n        colors: this.dataSource.colors,\n        responsive: [{\n          breakpoint: 1000,\n          options: {\n            plotOptions: {\n              bar: {\n                horizontal: true\n              }\n            }\n          }\n        }]\n      };\n    }\n  }\n};","map":{"version":3,"names":["ApexChart","name","components","props","width","type","Number","String","default","dataSource","Object","required","series","categories","colors","customTotals","data","horizontalTotal","computed","chartOptions","chart","stacked","height","animations","enabled","speed","toolbar","show","events","mounted","console","log","dataPointSelection","event","chartContext","config","dataLabels","enabledOnSeries","offsetX","offsetY","style","fontSize","fontWeight","fontFamily","formatter","val","opts","seriesIndex","dataPointIndex","toFixed","total","index","w","percent","xaxis","color","startsWith","formattedTotal","plotOptions","bar","horizontal","barHeight","grid","stroke","tooltip","shared","intersect","custom","category","value","globals","labels","axisBorder","axisTicks","yaxis","legend","position","markers","borderRadius","strokeWidth","itemMargin","vertical","seriesName","responsive","breakpoint","options"],"sources":["src/components/ValChart.vue"],"sourcesContent":["```vue\r\n<template>\r\n  <ApexChart\r\n    type=\"bar\"\r\n    height=\"100%\"\r\n    :width=\"width\"\r\n    :options=\"chartOptions\"\r\n    :series=\"dataSource.series\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport ApexChart from 'vue-apexcharts';\r\n\r\nexport default {\r\n  name: 'ValChart',\r\n  components: { ApexChart },\r\n  props: {\r\n    width: {\r\n      type: [Number, String],\r\n      default: '95%',\r\n    },\r\n    dataSource: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        series: [],\r\n        categories: [],\r\n        colors: [],\r\n        customTotals: [],\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      horizontalTotal: true,\r\n    };\r\n  },\r\n  computed: {\r\n    chartOptions() {\r\n      return {\r\n        chart: {\r\n          type: 'bar',\r\n          stacked: true,\r\n          height: '100%',\r\n          animations: {\r\n            enabled: true,\r\n            speed: 800,\r\n          },\r\n          toolbar: { show: false },\r\n          events: {\r\n            mounted: () => {\r\n              console.log('Chart mounted, customTotals:', this.dataSource.customTotals);\r\n            },\r\n            dataPointSelection: (event, chartContext, config) => {\r\n              console.log('Data point selected:', config);\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          enabledOnSeries: [0, 1],\r\n          offsetX: 10,\r\n          offsetY: 0,\r\n          style: {\r\n            fontSize: '11px',\r\n            fontWeight: 400,\r\n            fontFamily: 'Montserrat-Regular',\r\n            colors: ['#ffffff'],\r\n          },\r\n          formatter: (val, opts) => {\r\n            console.log('DataLabels formatter called, value:', val, 'seriesIndex:', opts.seriesIndex, 'dataPointIndex:', opts.dataPointIndex);\r\n            return val.toFixed(1);\r\n          },\r\n          total: {\r\n            enabled: this.horizontalTotal,\r\n            offsetX: 50, // Увеличиваем смещение для горизонтальной диаграммы\r\n            offsetY: 0,\r\n            style: {\r\n              fontSize: '14px',\r\n              fontWeight: 'normal',\r\n              fontFamily: 'Montserrat-Regular',\r\n            },\r\n            formatter: (val, opts) => {\r\n              const index = opts.dataPointIndex;\r\n              console.log(`Total formatter called, index: ${index}, dataPointIndex: ${opts.dataPointIndex}, val: ${val}`);\r\n              console.log('CustomTotals:', opts.w.config.customTotals);\r\n              const customTotals = opts.w.config.customTotals || [];\r\n              const [percent, total] = customTotals[index] || ['0%', 0];\r\n              console.log(`Category: ${opts.w.config.xaxis.categories[index]}, Percent: ${percent}, Total: ${total}`);\r\n              const color = percent.startsWith('-') ? '#FF4D4F' : '#52C41A';\r\n              opts.w.config.dataLabels.total.style.colors = [color];\r\n              const formattedTotal = Number(total).toFixed(1);\r\n              // Возвращаем строку вместо массива\r\n              return `${percent}\\n${formattedTotal}`;\r\n            },\r\n          },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            barHeight: '70%',\r\n          },\r\n        },\r\n        grid: { show: false },\r\n        stroke: { show: false },\r\n        tooltip: {\r\n          shared: false,\r\n          intersect: true,\r\n          custom: ({ series, seriesIndex, dataPointIndex, w }) => {\r\n            const category = w.config.xaxis.categories[dataPointIndex];\r\n            const value = series[seriesIndex][dataPointIndex];\r\n            const color = w.globals.colors[seriesIndex];\r\n            return `\r\n              <div style=\"padding: 5px; background: ${color}; color: #fff; font-size: 10px;\">\r\n                <strong>${category}:</strong> ${value}\r\n              </div>\r\n            `;\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: this.dataSource.categories,\r\n          labels: {\r\n            style: {\r\n              colors: '#ffffff',\r\n              fontSize: '11px',\r\n            },\r\n          },\r\n          axisBorder: { show: true, color: '#4b3f3f' },\r\n          axisTicks: { show: true, color: '#4b3f3f' },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            offsetX: 5,\r\n            style: { colors: '#ffffff' },\r\n          },\r\n          axisBorder: { show: true, color: '#4b3f3f' },\r\n          axisTicks: { show: true, color: '#4b3f3f' },\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetY: -10,\r\n          fontSize: '9px',\r\n          fontFamily: 'Montserrat-Regular, sans-serif',\r\n          markers: {\r\n            width: 10,\r\n            height: 10,\r\n            borderRadius: 10,\r\n            strokeWidth: 0,\r\n          },\r\n          itemMargin: {\r\n            horizontal: 5,\r\n            vertical: 15,\r\n          },\r\n          formatter: (seriesName, opts) => {\r\n            return `<span style=\"color: ${opts.w.globals.colors[opts.seriesIndex]}\">${seriesName}</span>`;\r\n          },\r\n        },\r\n        colors: this.dataSource.colors,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1000,\r\n            options: {\r\n              plotOptions: {\r\n                bar: { horizontal: true },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.apexcharts-datalabels-group,\r\n.apexcharts-datalabel,\r\n.apexcharts-datalabel-value,\r\n.apexcharts-datalabel-label {\r\n  opacity: 1 !important;\r\n  visibility: visible !important;\r\n  display: block !important;\r\n  text-anchor: start !important;\r\n  fill: inherit !important;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}